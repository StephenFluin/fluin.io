{"version":3,"sources":["webpack:///node_modules/@firebase/database/dist/index.cjs.js","webpack:///node_modules/@firebase/component/dist/index.cjs.js","webpack:///node_modules/firebase/app/dist/index.cjs.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/forkJoin.js","webpack:///node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/cdk.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/coercion.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/platform.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/observers.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/core.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/card.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/esm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/esm2015/input.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/fromEvent.js","webpack:///src/app/admin/shared/keyify.operator.ts","webpack:///node_modules/rxjs/_esm2015/internal/util/Immediate.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/asap.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js","webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire.js","webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-auth.js","webpack:///src/app/admin/shared/auth.service.ts","webpack:///node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/skipWhile.js","webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-database.js","webpack:///node_modules/@firebase/storage/dist/index.esm.js","webpack:///src/app/admin/upload.component.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/shared/editable-post.service.ts","webpack:///src/app/admin/edit-post.component.html","webpack:///src/app/admin/edit-post.component.ts","webpack:///src/app/admin/admin.module.ts","webpack:///node_modules/@firebase/database/node_modules/tslib/tslib.es6.js","webpack:///node_modules/@firebase/logger/dist/index.esm.js","webpack:///node_modules/@firebase/app/dist/index.cjs.js","webpack:///node_modules/@firebase/util/dist/index.cjs.js"],"names":["Object","defineProperty","exports","value","ex","id","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","_defaultIndexMap","EMPTY_NODE","doubleToIEEE754String","v","s","f","ln","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","repoInfo","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","queryParams","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","call","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","defineProperties","MAX","__referenceConstructor","emptyChildrenSingleton","__referenceConstructor$1","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","forEachTree","prefixPath","func","resolveDeferredValue","serverValues","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","existing","concat","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","layerTree_","write","subMerge","completeServerChildren","completeChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","authProvider_","auth_","getImmediate","then","auth","getToken","forceRefresh","Promise","addTokenChangeListener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","options","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","headers","process","platform","CONSTANTS","NODE_ADMIN","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","t","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","msg","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","app","authProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","search","authOverride","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","errorReason","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolvedTree","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","TransactionStatus","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","appName","databaseFromApp","dbUrl","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","TEST_ACCESS","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","registerDatabase","instance","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","instanceFactory","multipleInstances","serviceProps","instantiationMode","setInstantiationMode","mode","props","Provider","instances","instancesDeferred","identifier","normalizedIdentifier","normalizeInstanceIdentifier","getOrInitializeService","getComponent","setComponent","instanceDeferred","clearInstance","services","label","all","service","sent","isComponentSet","ComponentContainer","providers","addComponent","provider","addOrOverwriteComponent","getProviders","forkJoinInternal","sources","Observable","subscriber","completed","emitted","hasValue","subscribe","CheckboxControlValueAccessor","ControlContainer","AbstractControlDirective","DefaultValueAccessor","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","multi","_renderer","_elementRef","onChange","_","onTouched","setProperty","nativeElement","isDisabled","ɵfac","ɵdir","selectors","hostBindings","rf","$event","target","checked","features","DEFAULT_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","getUserAgent","_handleInput","_compositionStart","_compositionEnd","control","reset","errorCode","hasError","getError","valid","invalid","pending","disabled","enabled","errors","pristine","dirty","touched","untouched","statusChanges","valueChanges","ɵControlContainer_BaseFactory","unimplemented","NgControlStatus","NgControl","super","_parent","valueAccessor","_rawValidators","_rawAsyncValidators","cd","_cd","hostVars","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","minLength","maxLength","pattern","regexStr","regex","nullValidator","validators","presentValidators","isPresent","_mergeErrors","first","isObject","getPrototypeOf","resultSelector","pipe","toObservable","o","obs","arrayOfErrors","assign","normalizeValidator","validator","validate","normalizeAsyncValidator","NumberValueAccessor","RadioControlValueAccessor","RadioControlRegistry","RangeValueAccessor","NUMBER_VALUE_ACCESSOR","RADIO_VALUE_ACCESSOR","_accessors","accessor","_isSameGroup","fireUncheck","controlPair","_control","ɵprov","factory","_registry","_injector","_checkName","_state","_fn","select","writeValue","formControlName","_throwNameError","inputs","RANGE_VALUE_ACCESSOR","FormErrorExamples","SELECT_VALUE_ACCESSOR","_buildValueString","NgSelectOption","SelectControlValueAccessor","_optionMap","_idCounter","_compareWith","_getOptionId","valueString","_getOptionValue","JSON","compareWith","_element","_select","_registerOption","_setElementValue","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","_buildValueString$1","ɵNgSelectMultipleOption","SelectMultipleControlValueAccessor","optionSelectedStateSetter","ids","opt","_setSelected","selected","selectedOptions","item","_value","controlPath","setUpControl","dir","_throwError","compose","asyncValidator","composeAsync","registerOnChange","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","emitModelEvent","viewToModelUpdate","registerOnTouched","_pendingTouched","markAsTouched","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","markAsDirty","emitModelToViewChange","setUpFormContainer","_noControlError","messageEnd","composeValidators","composeAsyncValidators","BUILTIN_ACCESSORS","syncPendingControls","form","directives","_syncPendingControls","removeDir","list","el","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","NgForm","NgModelGroup_1","NgModelGroup","NgModel","FormsModule","ɵInternalFormsSharedModule","FormGroupDirective","BidiModule","Directionality","_onCollectionChange","_onDisabledChange","newValidator","opts","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","emit","markAsPending","skipPristineCheck","_parentMarkedDirty","disable","_updateValue","_updateAncestors","changeFn","enable","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","delimiter","controlToFind","FormGroup","controls","FormArray","at","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","x","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","condition","cb","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","acc","getRawValue","subtreeUpdated","updated","_reduceValue","initValue","_registerControl","some","formDirectiveProvider","resolvedPromise","submitted","_directives","ngSubmit","_findContainer","removeControl","group","resetForm","onSubmit","onReset","outputs","exportAs","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","ɵAbstractFormGroupDirective_BaseFactory","TemplateDrivenErrors","modelGroupProvider","modelGroupParentException","formControlBinding","resolvedPromise$1","valueAccessors","_registered","defaultAccessor","builtinAccessor","customAccessor","constructor","_checkForErrors","_setUpControl","_updateDisabled","viewModel","isFirstChange","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","formDirectiveProvider$1","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_clearChangeFns","_oldForm","sync","ɵmod","ɵinj","imports","DIR_DOCUMENT","providedIn","_document","htmlDir","documentElement","ngInjectableDef","coerceBooleanProperty","coerceElement","elementOrRef","hasV8BreakIterator","Intl","v8BreakIterator","supportedInputTypes","PlatformModule","Platform","supportsPassiveEvents","_platformId","isBrowser","EDGE","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","candidateInputTypes","getSupportedInputTypes","featureTestInput","setAttribute","debounceTime","dueTime","scheduler","lift","DebounceTimeOperator","destination","debouncedSubscription","lastValue","clearDebounce","schedule","dispatchNext","debouncedNext","Subscriber","ObserversModule","CdkObserveContent","ContentObserver","MutationObserverFactory","MatCommonModule","MutationObserver","_mutationObserverFactory","_observedElements","element","_cleanupObserver","observer","subscription","_observeElement","_unobserveElement","stream","Subject","create","mutations","observe","characterData","disconnect","_contentObserver","_ngZone","event","_disabled","_currentSubscription","_subscribe","_unsubscribe","runOutsideAngular","debounce","_debounce","fallbackValue","VERSION$2","MATERIAL_SANITY_CHECKS","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_isTestEnv","__karma__","jasmine","doctype","getComputedStyle","testElement","classList","computedStyle","full","SUPPORTS_INTL_API","ErrorStateMatcher","MatCardModule","MatCard","MAT_LABEL_GLOBAL_OPTIONS","_animationMode","ɵcmp","hostAttrs","ngContentSelectors","decls","vars","template","styles","encapsulation","changeDetection","takeUntil","notifier","TextFieldModule","AutofillMonitor","takeUntilSubscriber","notifierSubscription","subscribeToResult","seenValue","outerValue","innerValue","outerIndex","innerIndex","innerSub","OuterSubscriber","listenerOptions","passive","capture","_platform","_monitoredElements","info","subject","asObservable","cssClass","animationName","run","isAutofilled","removeEventListener","_info","stopMonitoring","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","placeholder","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","updateOutlineGap","ctx_r4","_shouldAlwaysFloat","appearance","_labelId","_hasLabel","hideRequiredMarker","required","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","MatError","nextUniqueId","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","getMatFormFieldDuplicatedHintError","align","MatSuffix","MatPrefix","MatPlaceholder","MatLabel","MatHint","defaultColor","MatFormFieldModule","MatFormField","MatInputModule","MatInput","nextUniqueId$1","nextUniqueId$2","_MatFormFieldMixinBase","_color","colorPalette","MAT_FORM_FIELD_DEFAULT_OPTIONS","_changeDetectorRef","labelOptions","_dir","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_animationsEnabled","_connectionContainerRef","_validateControlChild","controlType","stateChanges","startWith","_validatePlaceholders","_syncDescribedByIds","markForCheck","ngControl","onStable","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","detectChanges","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","fromEvent","eventName","isFunction","setupSubscription","sourceObj","handler","addListener","removeListener","TypeError","_label","take","_validateHints","startHint","endHint","hint","_getDisplayedMessages","setDescribedByIds","labelEl","textContent","trim","startWidth","gapWidth","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","height","containerStart","_getStartEnd","labelStart","labelWidth","offsetWidth","outlineGapPadding","rect","_appearance","oldValue","_hideRequiredMarker","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","contentQueries","dirIndex","_t","viewQuery","underlineRef","_inputContainerRef","_hideControlPlaceholder","autofilled","focused","_shouldForward","consts","onContainerClick","animation","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputMixinBase","base","oldState","newState","errorStateMatcher","_defaultErrorStateMatcher","isErrorState","_parentFormGroup","_parentForm","mixinErrorState","inputValueAccessor","_autofillMonitor","ngZone","_uid","_isServer","_isNativeSelect","_required","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","selectionStart","selectionEnd","setSelectionRange","nodeName","multiple","monitor","updateErrorState","_dirtyCheckNativeValue","focus","isFocused","readonly","validity","badInput","_ariaDescribedby","_id","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","_focusChanged","_onInput","keyify","actions","nextHandle","tasksByHandle","Immediate","handle","work","delay","scheduled","flush","asap","active","execute","state","delayTime","isNumeric","dispatch","noop","zone","delegate","targetZone","runGuarded","task","unscheduleTask","Zone","current","scheduleMacroTask","tap","invoke","outsideAngular","insideAngular","ɵkeepUnstableUntilFirstFactory","schedulers","platformId","obs$","observeOn","noopFunctions","FIREBASE_OPTIONS","FIREBASE_APP_NAME","ɵfirebaseAppFactory","nameOrConfig","config","apps","initializeApp","AngularFireAuthModule","AngularFireAuth","AngularFireModule","AuthService","FirebaseAppProvider","useFactory","deps","ngModule","useValue","keepUnstableUntilFirst","of","switchMap","shareReplay","bufferSize","refCount","authState","onAuthStateChanged","user","onIdTokenChanged","idToken","getIdToken","idTokenResult","getIdTokenResult","klass","observable","Proxy","includes","toPromise","mod","it","admin","uid","displayName","signInWithPopup","GoogleAuthProvider","signOut","DistinctUntilChangedOperator","keySelector","hasKey","y","WithLatestFromOperator","observables","project","toRespond","found","_tryProject","SkipWhileOperator","skipping","tryCallPredicate","Boolean","isNil","isFirebaseRef","pathRef","checkOperationCases","cases","stringCase","fromRef","listenType","prevKey","share","positionFor","buildView","currentKeyPosition","afterPreviousKeyPosition","previous","validateEventsArray","snapshotChanges","snapshotAction","childEvent$","scan","createDataOperationMethod","firebaseCase","snapshotCase","createObjectSnapshotChanges","AngularFireDatabaseModule","AngularFireDatabase","URL","databaseURL","pathOrRef","queryFn","afDatabase","outsideAngularScheduler","auditTrail","action$","lastKeyToLoad","loaded","loadedKeys","meta","FirebaseStorageError","code_","prependCode","message_","serverResponse_","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","unknown","cannotSliceBlob","noDownloadURL","invalidArgument","appDeleted","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","DataURLParts","rest","decoded","charCodeAt","hi","lo","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","bytes","atob","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","isDef","isJustDef","isNonNullObject","isInteger","isNumber","isNativeBlob","isNativeBlobDefined","Blob","ErrorCode","NetworkXhrIo","sent_","xhr_","errorCode_","NO_ERROR","sendPromise_","ABORT","NETWORK_ERROR","method","setRequestHeader","getErrorCode","getStatus","getResponseText","abort","getResponseHeader","header","addUploadProgressListener","upload","removeUploadProgressListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","FbsBlob","elideCopy","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","end","blob","webkitSlice","mozSlice","buffer","blobby","uint8Arrays","finalLength_1","merged_1","index_1","uploadData","Location","bucket","fullServerUrl","encode","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","gsRegex","hostRegex","groups","indices","postModify","loc","captures","exec","pathValue","jsonObjectOrNull","parse","canonicalChildPath","lastComponent","lastIndexOf","makeUrl","urlPart","makeQueryString","queryPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","fromResourceString","authWrapper","resourceString","mappings","resource","mapping","makeStorageReference","toResourceString","metadataValidator","listOptionsValidator","RequestInfo","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","text","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","pageToken","maxResults","isRoot","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","getDownloadUrl","tokens","alt","updateMetadata","deleteObject","_xhr","_text","metadataForUpload_","metadataClone","ResumableUploadStatus","total","finalized","checkResumeHeader_","allowed","Observer","nextOrObserver","UploadTaskSnapshot","bytesTransferred","totalBytes","specs","passed","minArgs","maxArgs","argMin","argMax","countPart","plural","ArgSpec","stringSpec","stringValidator","chainedValidator","v1","v2","uploadDataSpec","metadataSpec","listOptionSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","argsToForward","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","makeProgressCallback_","sizeBefore","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","getAuthToken","metadataForUpload","maxUploadRetryTime","createRequest","makeRequest","getPromise","sizeString","statusRequest","status_","bytesLeft","bytesToUpload","uploadStatus","newCurrent","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","boundary","metadataString","multipartRequest","transferred","old","notifyObservers_","wasPaused","externalState","typeValidator","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","makeBinder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","notifyObserver_","finishPromise_","triggered","pause","newRef","nameMapping","_metadata","fullPath","sizeMapping","newPath","throwIfRoot_","putString","listAll","listAllHelper","nextPage","getDownloadURL","FailRequest","_appDelete","RequestMap","addRequest","AuthWrapper","maker","requestMaker","pool","bucket_","appId_","deleted_","extractBucket_","appId","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","deleteApp","setMaxUploadRetryTime","setMaxOperationRetryTime","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","errorCallback_","progressCallback_","timeout_","backoffDone","requestWentThrough","wasSuccessCode","canceled","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","__spreadArrays","waitMillis","mustStop","stopped","stop","wasTimeout","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","namespaceExports","Service","authWrapperBucket","internals_","ServiceInternals","Storage","UploadComponent","db","router","storage","fileList","folder","imageList","itemList","pathReference","$key","downloadURL","filename","storageRef","getElementById","files","selectedFile","iRef","cacheControl","image","storagePath","referencePath","object","AdminComponent","EditablePostService","posts","date","talkList","ps","post","getObject","getPostList","refreshData","confirm","EditPostComponent","activatedRoute","ep","title","sanitized","postChanges","postPreview","bypassSecurityTrustHtml","postData","postMap","postListObject","setTitle","contentChange","save","navigateByUrl","ctrlKey","preventDefault","AdminModule","forChild","apiKey","authDomain","storageBucket","extendStatics","setPrototypeOf","__","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","thisArg","_arguments","P","generator","fulfilled","step","rejected","g","trys","ops","verb","Symbol","__exportStar","ar","il","jl","__await","__asyncGenerator","asyncIterator","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","levelStringToEnum","DEBUG","INFO","WARN","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","toISOString","_logLevel","_logHandler","_userLogHandler","debug","setLogLevel","level","newLevel","inst","setUserLogHandler","logCallback","customLogLevel","userLogHandler","ignored","instances_1","_a$1","ERRORS","ERROR_FACTORY","ErrorFactory","PLATFORM_LOG_STRING","FirebaseAppImpl","firebase_","isDeleted_","automaticDataCollectionEnabled_","automaticDataCollectionEnabled","options_","_addComponent","components","checkDestroyed_","removeApp","_getService","instanceIdentifier","_removeServiceInstance","_addOrOverwriteComponent","createFirebaseNamespace","firebaseAppImpl","rawConfig","libraryKeyOrName","variant","library","libraryMismatch","versionMismatch","warning","onLog","useAsService","componentName","serviceNamespace","appArg","deepExtend","serviceFxn","extendNamespace","createSubscribe","PlatformLoggerService","getPlatformInfoString","logString","sdkVersion","isNode","firebase$1","assertion","out","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","input","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte3","outByte4","encodeString","btoa","decodeString","pos","c1","fromCharCode","c2","u","c3","decodeStringToByteArray","charToByteMap","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","base64Decode","getUA","FirebaseError","captureStackTrace","serviceName","customData","fullCode","replaceTemplate","fullMessage","PATTERN","decode","claims","signature","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","compress_","buf","W","lengthMinusBlock","inbuf","totalBits","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","forEachObserver","methods","methods_1","unsub","unsubscribeOne","finalError","sendOne","argName","onError","isBrowserExtension","runtime","browser","isElectron","isIE","ua","global","isUWP","isValidTimestamp","validSince","validUntil","issuedAtTime","contextObj","querystringParams","arrayVal","querystringDecode","minCount","maxCount","argCount","argError","validateNamespace"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n            // We interpret the subdomain of a 3 component URL as the namespace name.\r\n            namespace = subdomain;\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nvalue, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view\r\n                            .getQuery()\r\n                            .getQueryParams()\r\n                            .loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view\r\n                    .getQuery()\r\n                    .getQueryParams()\r\n                    .loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view\r\n                    .getQuery()\r\n                    .getQueryParams()\r\n                    .loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    function AuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        var authTokenProvider = new AuthTokenProvider(app, authProvider);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.5.24\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new util.Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            // If the service instance is available, resolve the promise with it immediately\r\n            try {\r\n                var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                if (instance) {\r\n                    deferred.resolve(instance);\r\n                }\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception during get(), it should not cause\r\n                // a fatal error. We just return the unresolved promise in this case.\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        try {\r\n            var instance = this.getOrInitializeService(normalizedIdentifier);\r\n            if (!instance) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n            return instance;\r\n        }\r\n        catch (e) {\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService(DEFAULT_ENTRY_NAME);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService(normalizedIdentifier);\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; })\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (identifier) {\r\n        var instance = this.instances.get(identifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));\r\n            this.instances.set(identifier, instance);\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\nexports.Component = Component;\nexports.ComponentContainer = ComponentContainer;\nexports.Provider = Provider;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar name = \"firebase\";\nvar version = \"7.12.0\";\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app');\n\nmodule.exports = firebase;\n//# sourceMappingURL=index.cjs.js.map\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { from } from './from';\nexport function forkJoin(...sources) {\n    if (sources.length === 1) {\n        const first = sources[0];\n        if (isArray(first)) {\n            return forkJoinInternal(first, null);\n        }\n        if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n            const keys = Object.keys(first);\n            return forkJoinInternal(keys.map(key => first[key]), keys);\n        }\n    }\n    if (typeof sources[sources.length - 1] === 'function') {\n        const resultSelector = sources.pop();\n        sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n        return forkJoinInternal(sources, null).pipe(map((args) => resultSelector(...args)));\n    }\n    return forkJoinInternal(sources, null);\n}\nfunction forkJoinInternal(sources, keys) {\n    return new Observable(subscriber => {\n        const len = sources.length;\n        if (len === 0) {\n            subscriber.complete();\n            return;\n        }\n        const values = new Array(len);\n        let completed = 0;\n        let emitted = 0;\n        for (let i = 0; i < len; i++) {\n            const source = from(sources[i]);\n            let hasValue = false;\n            subscriber.add(source.subscribe({\n                next: value => {\n                    if (!hasValue) {\n                        hasValue = true;\n                        emitted++;\n                    }\n                    values[i] = value;\n                },\n                error: err => subscriber.error(err),\n                complete: () => {\n                    completed++;\n                    if (completed === len || !hasValue) {\n                        if (emitted === len) {\n                            subscriber.next(keys ?\n                                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                                values);\n                        }\n                        subscriber.complete();\n                    }\n                }\n            }));\n        }\n    });\n}\n//# sourceMappingURL=forkJoin.js.map","/**\n * @license Angular v10.0.0-rc.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Input, Injector, ɵlooseIdentical, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /** @class */ (() => {\n    let CheckboxControlValueAccessor = class CheckboxControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /**\n             * @description\n             * The registered callback function called when a change event occurs on the input element.\n             */\n            this.onChange = (_) => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * Sets the \"checked\" property on the input element.\n         *\n         * @param value The checked value\n         */\n        writeValue(value) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this.onChange = fn;\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n    };\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\n    CheckboxControlValueAccessor = __decorate([ __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], CheckboxControlValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n    return CheckboxControlValueAccessor;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * @description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /** @class */ (() => {\n    let DefaultValueAccessor = class DefaultValueAccessor {\n        constructor(_renderer, _elementRef, _compositionMode) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._compositionMode = _compositionMode;\n            /**\n             * @description\n             * The registered callback function called when an input event occurs on the input element.\n             */\n            this.onChange = (_) => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n            /** Whether the user is creating a composition string (IME events). */\n            this._composing = false;\n            if (this._compositionMode == null) {\n                this._compositionMode = !_isAndroid();\n            }\n        }\n        /**\n         * Sets the \"value\" property on the input element.\n         *\n         * @param value The checked value\n         */\n        writeValue(value) {\n            const normalizedValue = value == null ? '' : value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this.onChange = fn;\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /** @internal */\n        _handleInput(value) {\n            if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n                this.onChange(value);\n            }\n        }\n        /** @internal */\n        _compositionStart() {\n            this._composing = true;\n        }\n        /** @internal */\n        _compositionEnd(value) {\n            this._composing = false;\n            this._compositionMode && this.onChange(value);\n        }\n    };\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\n    DefaultValueAccessor = __decorate([ __param(2, Optional()), __param(2, Inject(COMPOSITION_BUFFER_MODE)),\n        __metadata(\"design:paramtypes\", [Renderer2, ElementRef, Boolean])\n    ], DefaultValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\n    return DefaultValueAccessor;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * @description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * @description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * @description\n         * The uncomposed array of async validators for the control\n         *\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * @description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get validator() {\n        return unimplemented();\n    }\n    /**\n     * @description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get asyncValidator() {\n        return unimplemented();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get ngClassUntouched() {\n        return this._cd.control ? this._cd.control.untouched : false;\n    }\n    get ngClassTouched() {\n        return this._cd.control ? this._cd.control.touched : false;\n    }\n    get ngClassPristine() {\n        return this._cd.control ? this._cd.control.pristine : false;\n    }\n    get ngClassDirty() {\n        return this._cd.control ? this._cd.control.dirty : false;\n    }\n    get ngClassValid() {\n        return this._cd.control ? this._cd.control.valid : false;\n    }\n    get ngClassInvalid() {\n        return this._cd.control ? this._cd.control.invalid : false;\n    }\n    get ngClassPending() {\n        return this._cd.control ? this._cd.control.pending : false;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /** @class */ (() => {\n    let NgControlStatus = class NgControlStatus extends AbstractControlStatus {\n        constructor(cd) {\n            super(cd);\n        }\n    };\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    NgControlStatus = __decorate([ __param(0, Self()),\n        __metadata(\"design:paramtypes\", [NgControl])\n    ], NgControlStatus);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n    return NgControlStatus;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /** @class */ (() => {\n    let NgControlStatusGroup = class NgControlStatusGroup extends AbstractControlStatus {\n        constructor(cd) {\n            super(cd);\n        }\n    };\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n    NgControlStatusGroup = __decorate([ __param(0, Self()),\n        __metadata(\"design:paramtypes\", [ControlContainer])\n    ], NgControlStatusGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n    return NgControlStatusGroup;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            return control.value.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return (control) => {\n            return hasValidLength(control.value) && control.value.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        let regex;\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return null;\n    }\n    static compose(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            const observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(_mergeErrors));\n        };\n    }\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction _executeValidators(control, validators) {\n    return validators.map(v => v(control));\n}\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(v => v(control));\n}\nfunction _mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeValidator(validator) {\n    if (!!validator.validate) {\n        return (c) => validator.validate(c);\n    }\n    else {\n        return validator;\n    }\n}\nfunction normalizeAsyncValidator(validator) {\n    if (!!validator.validate) {\n        return (c) => validator.validate(c);\n    }\n    else {\n        return validator;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /** @class */ (() => {\n    let NumberValueAccessor = class NumberValueAccessor {\n        constructor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /**\n             * @description\n             * The registered callback function called when a change or input event occurs on the input\n             * element.\n             */\n            this.onChange = (_) => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * Sets the \"value\" property on the input element.\n         *\n         * @param value The checked value\n         */\n        writeValue(value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            const normalizedValue = value == null ? '' : value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this.onChange = (value) => {\n                fn(value == '' ? null : parseFloat(value));\n            };\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n    };\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\n    NumberValueAccessor = __decorate([ __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], NumberValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n    return NumberValueAccessor;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /** @class */ (() => {\n    let RadioControlRegistry = class RadioControlRegistry {\n        constructor() {\n            this._accessors = [];\n        }\n        /**\n         * @description\n         * Adds a control to the internal registry. For internal use only.\n         */\n        add(control, accessor) {\n            this._accessors.push([control, accessor]);\n        }\n        /**\n         * @description\n         * Removes a control from the internal registry. For internal use only.\n         */\n        remove(accessor) {\n            for (let i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        /**\n         * @description\n         * Selects a radio button. For internal use only.\n         */\n        select(accessor) {\n            this._accessors.forEach((c) => {\n                if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        }\n        _isSameGroup(controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        }\n    };\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: function (t) { return RadioControlRegistry.ɵfac(t); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n    return RadioControlRegistry;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /** @class */ (() => {\n    let RadioControlValueAccessor = class RadioControlValueAccessor {\n        constructor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            /**\n             * @description\n             * The registered callback function called when a change event occurs on the input element.\n             */\n            this.onChange = () => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * @description\n         * A lifecycle method called when the directive is initialized. For internal use only.\n         */\n        ngOnInit() {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        }\n        /**\n         * @description\n         * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n         */\n        ngOnDestroy() {\n            this._registry.remove(this);\n        }\n        /**\n         * @description\n         * Sets the \"checked\" property value on the radio input element.\n         *\n         * @param value The checked value\n         */\n        writeValue(value) {\n            this._state = value === this.value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this._fn = fn;\n            this.onChange = () => {\n                fn(this.value);\n                this._registry.select(this);\n            };\n        }\n        /**\n         * Sets the \"value\" on the radio input element and unchecks it.\n         *\n         * @param value\n         */\n        fireUncheck(value) {\n            this.writeValue(value);\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        _checkName() {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        }\n        _throwNameError() {\n            throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n        }\n    };\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RadioControlValueAccessor.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RadioControlValueAccessor.prototype, \"formControlName\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RadioControlValueAccessor.prototype, \"value\", void 0);\n    RadioControlValueAccessor = __decorate([ __metadata(\"design:paramtypes\", [Renderer2, ElementRef,\n            RadioControlRegistry, Injector])\n    ], RadioControlValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n    return RadioControlValueAccessor;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /** @class */ (() => {\n    let RangeValueAccessor = class RangeValueAccessor {\n        constructor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /**\n             * @description\n             * The registered callback function called when a change or input event occurs on the input\n             * element.\n             */\n            this.onChange = (_) => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * Sets the \"value\" property on the input element.\n         *\n         * @param value The checked value\n         */\n        writeValue(value) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this.onChange = (value) => {\n                fn(value == '' ? null : parseFloat(value));\n            };\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the range input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n    };\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\n    RangeValueAccessor = __decorate([ __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], RangeValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n    return RangeValueAccessor;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ReactiveErrors {\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /** @class */ (() => {\n    let SelectControlValueAccessor = class SelectControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            /**\n             * @description\n             * The registered callback function called when a change event occurs on the input element.\n             */\n            this.onChange = (_) => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n            this._compareWith = ɵlooseIdentical;\n        }\n        /**\n         * @description\n         * Tracks the option comparison algorithm for tracking identities when\n         * checking for changes.\n         */\n        set compareWith(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n            }\n            this._compareWith = fn;\n        }\n        /**\n         * Sets the \"value\" property on the input element. The \"selectedIndex\"\n         * property is also set if an ID is provided on the option element.\n         *\n         * @param value The checked value\n         */\n        writeValue(value) {\n            this.value = value;\n            const id = this._getOptionId(value);\n            if (id == null) {\n                this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n            }\n            const valueString = _buildValueString(id, value);\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this.onChange = (valueString) => {\n                this.value = this._getOptionValue(valueString);\n                fn(this.value);\n            };\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the select input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /** @internal */\n        _registerOption() {\n            return (this._idCounter++).toString();\n        }\n        /** @internal */\n        _getOptionId(value) {\n            for (const id of Array.from(this._optionMap.keys())) {\n                if (this._compareWith(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        }\n        /** @internal */\n        _getOptionValue(valueString) {\n            const id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        }\n    };\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], SelectControlValueAccessor.prototype, \"compareWith\", null);\n    SelectControlValueAccessor = __decorate([ __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], SelectControlValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n    return SelectControlValueAccessor;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /** @class */ (() => {\n    let NgSelectOption = class NgSelectOption {\n        constructor(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        /**\n         * @description\n         * Tracks the value bound to the option element. Unlike the value binding,\n         * ngValue supports binding to objects.\n         */\n        set ngValue(value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        /**\n         * @description\n         * Tracks simple string values bound to the option element.\n         * For objects, use the `ngValue` input binding.\n         */\n        set value(value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        }\n        /** @internal */\n        _setElementValue(value) {\n            this._renderer.setProperty(this._element.nativeElement, 'value', value);\n        }\n        /**\n         * @description\n         * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n         */\n        ngOnDestroy() {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        }\n    };\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n    __decorate([\n        Input('ngValue'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSelectOption.prototype, \"ngValue\", null);\n    __decorate([\n        Input('value'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSelectOption.prototype, \"value\", null);\n    NgSelectOption = __decorate([ __param(2, Optional()), __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ElementRef, Renderer2,\n            SelectControlValueAccessor])\n    ], NgSelectOption);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n    return NgSelectOption;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /** @class */ (() => {\n    let SelectMultipleControlValueAccessor = class SelectMultipleControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            /**\n             * @description\n             * The registered callback function called when a change event occurs on the input element.\n             */\n            this.onChange = (_) => { };\n            /**\n             * @description\n             * The registered callback function called when a blur event occurs on the input element.\n             */\n            this.onTouched = () => { };\n            this._compareWith = ɵlooseIdentical;\n        }\n        /**\n         * @description\n         * Tracks the option comparison algorithm for tracking identities when\n         * checking for changes.\n         */\n        set compareWith(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n            }\n            this._compareWith = fn;\n        }\n        /**\n         * @description\n         * Sets the \"value\" property on one or of more\n         * of the select's options.\n         *\n         * @param value The value\n         */\n        writeValue(value) {\n            this.value = value;\n            let optionSelectedStateSetter;\n            if (Array.isArray(value)) {\n                // convert values to ids\n                const ids = value.map((v) => this._getOptionId(v));\n                optionSelectedStateSetter = (opt, o) => {\n                    opt._setSelected(ids.indexOf(o.toString()) > -1);\n                };\n            }\n            else {\n                optionSelectedStateSetter = (opt, o) => {\n                    opt._setSelected(false);\n                };\n            }\n            this._optionMap.forEach(optionSelectedStateSetter);\n        }\n        /**\n         * @description\n         * Registers a function called when the control value changes\n         * and writes an array of the selected options.\n         *\n         * @param fn The callback function\n         */\n        registerOnChange(fn) {\n            this.onChange = (_) => {\n                const selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    const options = _.selectedOptions;\n                    for (let i = 0; i < options.length; i++) {\n                        const opt = options.item(i);\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                // Degrade on IE\n                else {\n                    const options = _.options;\n                    for (let i = 0; i < options.length; i++) {\n                        const opt = options.item(i);\n                        if (opt.selected) {\n                            const val = this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                this.value = selected;\n                fn(selected);\n            };\n        }\n        /**\n         * @description\n         * Registers a function called when the control is touched.\n         *\n         * @param fn The callback function\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the select input element.\n         *\n         * @param isDisabled The disabled value\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /** @internal */\n        _registerOption(value) {\n            const id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        }\n        /** @internal */\n        _getOptionId(value) {\n            for (const id of Array.from(this._optionMap.keys())) {\n                if (this._compareWith(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        }\n        /** @internal */\n        _getOptionValue(valueString) {\n            const id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        }\n    };\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], SelectMultipleControlValueAccessor.prototype, \"compareWith\", null);\n    SelectMultipleControlValueAccessor = __decorate([ __metadata(\"design:paramtypes\", [Renderer2, ElementRef])\n    ], SelectMultipleControlValueAccessor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n    return SelectMultipleControlValueAccessor;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /** @class */ (() => {\n    let ɵNgSelectMultipleOption = class ɵNgSelectMultipleOption {\n        constructor(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        /**\n         * @description\n         * Tracks the value bound to the option element. Unlike the value binding,\n         * ngValue supports binding to objects.\n         */\n        set ngValue(value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        /**\n         * @description\n         * Tracks simple string values bound to the option element.\n         * For objects, use the `ngValue` input binding.\n         */\n        set value(value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        }\n        /** @internal */\n        _setElementValue(value) {\n            this._renderer.setProperty(this._element.nativeElement, 'value', value);\n        }\n        /** @internal */\n        _setSelected(selected) {\n            this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n        }\n        /**\n         * @description\n         * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n         */\n        ngOnDestroy() {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        }\n    };\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n    __decorate([\n        Input('ngValue'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], ɵNgSelectMultipleOption.prototype, \"ngValue\", null);\n    __decorate([\n        Input('value'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], ɵNgSelectMultipleOption.prototype, \"value\", null);\n    ɵNgSelectMultipleOption = __decorate([ __param(2, Optional()), __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ElementRef, Renderer2,\n            SelectMultipleControlValueAccessor])\n    ], ɵNgSelectMultipleOption);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n    return ɵNgSelectMultipleOption;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange((isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n}\nfunction cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(() => _noControlError(dir));\n    dir.valueAccessor.registerOnTouched(() => _noControlError(dir));\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\nfunction removeDir(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\nfunction coerceToValidator(validatorOrOpts) {\n    const validator = (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators :\n        validatorOrOpts);\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    const origAsyncValidator = (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators :\n        asyncValidator);\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validator The function that determines the synchronous validity of this control.\n     * @param asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    constructor(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setValidators(newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setAsyncValidators(newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe((errors) => this.setErrors(errors, { emitEvent }));\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = () => { };\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        let res = false;\n        this._forEachChild((control, name) => {\n            res = res || (this.contains(name) && condition(control));\n        });\n        return res;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst ɵ0 = () => Promise.resolve(null);\nconst resolvedPromise = (ɵ0)();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /** @class */ (() => {\n    let NgForm = class NgForm extends ControlContainer {\n        constructor(validators, asyncValidators) {\n            super();\n            /**\n             * @description\n             * Returns whether the form submission has been triggered.\n             */\n            this.submitted = false;\n            this._directives = [];\n            /**\n             * @description\n             * Event emitter for the \"ngSubmit\" event\n             */\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        /**\n         * @description\n         * Lifecycle method called after the view is initialized. For internal use only.\n         */\n        ngAfterViewInit() {\n            this._setUpdateStrategy();\n        }\n        /**\n         * @description\n         * The directive instance.\n         */\n        get formDirective() {\n            return this;\n        }\n        /**\n         * @description\n         * The internal `FormGroup` instance.\n         */\n        get control() {\n            return this.form;\n        }\n        /**\n         * @description\n         * Returns an array representing the path to this group. Because this directive\n         * always lives at the top level of a form, it is always an empty array.\n         */\n        get path() {\n            return [];\n        }\n        /**\n         * @description\n         * Returns a map of the controls in this group.\n         */\n        get controls() {\n            return this.form.controls;\n        }\n        /**\n         * @description\n         * Method that sets up the control directive in this group, re-calculates its value\n         * and validity, and adds the instance to the internal list of directives.\n         *\n         * @param dir The `NgModel` directive instance.\n         */\n        addControl(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                dir.control =\n                    container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n                this._directives.push(dir);\n            });\n        }\n        /**\n         * @description\n         * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n         *\n         * @param dir The `NgModel` directive instance.\n         */\n        getControl(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * @description\n         * Removes the `NgModel` instance from the internal list of directives\n         *\n         * @param dir The `NgModel` directive instance.\n         */\n        removeControl(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n                removeDir(this._directives, dir);\n            });\n        }\n        /**\n         * @description\n         * Adds a new `NgModelGroup` directive instance to the form.\n         *\n         * @param dir The `NgModelGroup` directive instance.\n         */\n        addFormGroup(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                const group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        }\n        /**\n         * @description\n         * Removes the `NgModelGroup` directive instance from the form.\n         *\n         * @param dir The `NgModelGroup` directive instance.\n         */\n        removeFormGroup(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        }\n        /**\n         * @description\n         * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n         *\n         * @param dir The `NgModelGroup` directive instance.\n         */\n        getFormGroup(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * Sets the new value for the provided `NgControl` directive.\n         *\n         * @param dir The `NgControl` directive instance.\n         * @param value The new value for the directive's control.\n         */\n        updateModel(dir, value) {\n            resolvedPromise.then(() => {\n                const ctrl = this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        }\n        /**\n         * @description\n         * Sets the value for this `FormGroup`.\n         *\n         * @param value The new value\n         */\n        setValue(value) {\n            this.control.setValue(value);\n        }\n        /**\n         * @description\n         * Method called when the \"submit\" event is triggered on the form.\n         * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n         *\n         * @param $event The \"submit\" event object\n         */\n        onSubmit($event) {\n            this.submitted = true;\n            syncPendingControls(this.form, this._directives);\n            this.ngSubmit.emit($event);\n            return false;\n        }\n        /**\n         * @description\n         * Method called when the \"reset\" event is triggered on the form.\n         */\n        onReset() {\n            this.resetForm();\n        }\n        /**\n         * @description\n         * Resets the form to an initial value and resets its submitted status.\n         *\n         * @param value The new value for the form.\n         */\n        resetForm(value = undefined) {\n            this.form.reset(value);\n            this.submitted = false;\n        }\n        _setUpdateStrategy() {\n            if (this.options && this.options.updateOn != null) {\n                this.form._updateOn = this.options.updateOn;\n            }\n        }\n        /** @internal */\n        _findContainer(path) {\n            path.pop();\n            return path.length ? this.form.get(path) : this.form;\n        }\n    };\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n    __decorate([\n        Input('ngFormOptions'),\n        __metadata(\"design:type\", Object)\n    ], NgForm.prototype, \"options\", void 0);\n    NgForm = __decorate([ __param(0, Optional()), __param(0, Self()), __param(0, Inject(NG_VALIDATORS)),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [Array, Array])\n    ], NgForm);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\n    return NgForm;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /** @class */ (() => {\n    let AbstractFormGroupDirective = class AbstractFormGroupDirective extends ControlContainer {\n        /**\n         * @description\n         * An internal callback method triggered on the instance after the inputs are set.\n         * Registers the group with its parent group.\n         */\n        ngOnInit() {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        }\n        /**\n         * @description\n         * An internal callback method triggered before the instance is destroyed.\n         * Removes the group from its parent group.\n         */\n        ngOnDestroy() {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        }\n        /**\n         * @description\n         * The `FormGroup` bound to this directive.\n         */\n        get control() {\n            return this.formDirective.getFormGroup(this);\n        }\n        /**\n         * @description\n         * The path to this group from the top-level directive.\n         */\n        get path() {\n            return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n        }\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /**\n         * @description\n         * The synchronous validators registered with this group.\n         */\n        get validator() {\n            return composeValidators(this._validators);\n        }\n        /**\n         * @description\n         * The async validators registered with this group.\n         */\n        get asyncValidator() {\n            return composeAsyncValidators(this._asyncValidators);\n        }\n        /** @internal */\n        _checkParentType() { }\n    };\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n        type: Directive\n    }], null, null); })();\n    return AbstractFormGroupDirective;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TemplateDrivenErrors {\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /** @class */ (() => {\n    var NgModelGroup_1;\n    let NgModelGroup = NgModelGroup_1 = class NgModelGroup extends AbstractFormGroupDirective {\n        constructor(parent, validators, asyncValidators) {\n            super();\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        _checkParentType() {\n            if (!(this._parent instanceof NgModelGroup_1) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        }\n    };\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n    __decorate([\n        Input('ngModelGroup'),\n        __metadata(\"design:type\", String)\n    ], NgModelGroup.prototype, \"name\", void 0);\n    NgModelGroup = NgModelGroup_1 = __decorate([ __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [ControlContainer, Array, Array])\n    ], NgModelGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\n    return NgModelGroup;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\nconst ɵ0$1 = () => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise$1 = (ɵ0$1)();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You then access the control using the directive's `control` property, but\n * most properties used (like `valid` and `dirty`) fall through to the control anyway for direct\n * access. See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is\n * used within a custom form component, and the name `@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /** @class */ (() => {\n    let NgModel = class NgModel extends NgControl {\n        constructor(parent, validators, asyncValidators, valueAccessors) {\n            super();\n            this.control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            /**\n             * @description\n             * Event emitter for producing the `ngModelChange` event after\n             * the view model updates.\n             */\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use\n         * only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        }\n        /**\n         * @description\n         * Lifecycle method called before the directive's instance is destroyed. For internal\n         * use only.\n         */\n        ngOnDestroy() {\n            this.formDirective && this.formDirective.removeControl(this);\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        }\n        /**\n         * @description\n         * The top-level directive for this control if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators\n         * registered with this directive.\n         */\n        get validator() {\n            return composeValidators(this._rawValidators);\n        }\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this\n         * directive.\n         */\n        get asyncValidator() {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        }\n        /**\n         * @description\n         * Sets the new value for the view model and emits an `ngModelChange` event.\n         *\n         * @param newValue The new value emitted by `ngModelChange`.\n         */\n        viewToModelUpdate(newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        }\n        _setUpControl() {\n            this._setUpdateStrategy();\n            this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n            this._registered = true;\n        }\n        _setUpdateStrategy() {\n            if (this.options && this.options.updateOn != null) {\n                this.control._updateOn = this.options.updateOn;\n            }\n        }\n        _isStandalone() {\n            return !this._parent || !!(this.options && this.options.standalone);\n        }\n        _setUpStandalone() {\n            setUpControl(this.control, this);\n            this.control.updateValueAndValidity({ emitEvent: false });\n        }\n        _checkForErrors() {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        }\n        _checkParentType() {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        }\n        _checkName() {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        }\n        _updateValue(value) {\n            resolvedPromise$1.then(() => {\n                this.control.setValue(value, { emitViewToModelChange: false });\n            });\n        }\n        _updateDisabled(changes) {\n            const disabledValue = changes['isDisabled'].currentValue;\n            const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(() => {\n                if (isDisabled && !this.control.disabled) {\n                    this.control.disable();\n                }\n                else if (!isDisabled && this.control.disabled) {\n                    this.control.enable();\n                }\n            });\n        }\n    };\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], NgModel.prototype, \"name\", void 0);\n    __decorate([\n        Input('disabled'),\n        __metadata(\"design:type\", Boolean)\n    ], NgModel.prototype, \"isDisabled\", void 0);\n    __decorate([\n        Input('ngModel'),\n        __metadata(\"design:type\", Object)\n    ], NgModel.prototype, \"model\", void 0);\n    __decorate([\n        Input('ngModelOptions'),\n        __metadata(\"design:type\", Object)\n    ], NgModel.prototype, \"options\", void 0);\n    __decorate([\n        Output('ngModelChange'),\n        __metadata(\"design:type\", Object)\n    ], NgModel.prototype, \"update\", void 0);\n    NgModel = __decorate([ __param(0, Optional()), __param(0, Host()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __param(3, Optional()), __param(3, Self()), __param(3, Inject(NG_VALUE_ACCESSOR)),\n        __metadata(\"design:paramtypes\", [ControlContainer,\n            Array,\n            Array, Array])\n    ], NgModel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\n    return NgModel;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /** @class */ (() => {\n    let ɵNgNoValidate = class ɵNgNoValidate {\n    };\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n    return ɵNgNoValidate;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /** @class */ (() => {\n    var FormControlDirective_1;\n    let FormControlDirective = FormControlDirective_1 = class FormControlDirective extends NgControl {\n        constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n            super();\n            this._ngModelWarningConfig = _ngModelWarningConfig;\n            /** @deprecated as of v6 */\n            this.update = new EventEmitter();\n            /**\n             * @description\n             * Instance property used to track whether an ngModel warning has been sent out for this\n             * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n             *\n             * @internal\n             */\n            this._ngModelWarningSent = false;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @description\n         * Triggers a warning that this input should not be used with reactive forms.\n         */\n        set isDisabled(isDisabled) {\n            ReactiveErrors.disabledAttrWarning();\n        }\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use\n         * only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                _ngModelWarning('formControl', FormControlDirective_1, this, this._ngModelWarningConfig);\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return [];\n        }\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators\n         * registered with this directive.\n         */\n        get validator() {\n            return composeValidators(this._rawValidators);\n        }\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this\n         * directive.\n         */\n        get asyncValidator() {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        }\n        /**\n         * @description\n         * The `FormControl` bound to this directive.\n         */\n        get control() {\n            return this.form;\n        }\n        /**\n         * @description\n         * Sets the new value for the view model and emits an `ngModelChange` event.\n         *\n         * @param newValue The new value for the view model.\n         */\n        viewToModelUpdate(newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        }\n        _isControlChanged(changes) {\n            return changes.hasOwnProperty('form');\n        }\n    };\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    FormControlDirective._ngModelWarningSentOnce = false;\n    __decorate([\n        Input('formControl'),\n        __metadata(\"design:type\", FormControl)\n    ], FormControlDirective.prototype, \"form\", void 0);\n    __decorate([\n        Input('disabled'),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], FormControlDirective.prototype, \"isDisabled\", null);\n    __decorate([\n        Input('ngModel'),\n        __metadata(\"design:type\", Object)\n    ], FormControlDirective.prototype, \"model\", void 0);\n    __decorate([\n        Output('ngModelChange'),\n        __metadata(\"design:type\", Object)\n    ], FormControlDirective.prototype, \"update\", void 0);\n    FormControlDirective = FormControlDirective_1 = __decorate([ __param(0, Optional()), __param(0, Self()), __param(0, Inject(NG_VALIDATORS)),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_ASYNC_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_VALUE_ACCESSOR)),\n        __param(3, Optional()), __param(3, Inject(NG_MODEL_WITH_FORM_CONTROL_WARNING)),\n        __metadata(\"design:paramtypes\", [Array,\n            Array, Array, Object])\n    ], FormControlDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n    return FormControlDirective;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /** @class */ (() => {\n    let FormGroupDirective = class FormGroupDirective extends ControlContainer {\n        constructor(_validators, _asyncValidators) {\n            super();\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            /**\n             * @description\n             * Reports whether the form submission has been triggered.\n             */\n            this.submitted = false;\n            /**\n             * @description\n             * Tracks the list of added `FormControlName` instances\n             */\n            this.directives = [];\n            /**\n             * @description\n             * Tracks the `FormGroup` bound to this directive.\n             */\n            this.form = null;\n            /**\n             * @description\n             * Emits an event when the form submission has been triggered.\n             */\n            this.ngSubmit = new EventEmitter();\n        }\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        }\n        /**\n         * @description\n         * Returns this directive's instance.\n         */\n        get formDirective() {\n            return this;\n        }\n        /**\n         * @description\n         * Returns the `FormGroup` bound to this directive.\n         */\n        get control() {\n            return this.form;\n        }\n        /**\n         * @description\n         * Returns an array representing the path to this group. Because this directive\n         * always lives at the top level of a form, it always an empty array.\n         */\n        get path() {\n            return [];\n        }\n        /**\n         * @description\n         * Method that sets up the control directive in this group, re-calculates its value\n         * and validity, and adds the instance to the internal list of directives.\n         *\n         * @param dir The `FormControlName` directive instance.\n         */\n        addControl(dir) {\n            const ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        }\n        /**\n         * @description\n         * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n         *\n         * @param dir The `FormControlName` directive instance.\n         */\n        getControl(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * @description\n         * Removes the `FormControlName` instance from the internal list of directives\n         *\n         * @param dir The `FormControlName` directive instance.\n         */\n        removeControl(dir) {\n            removeDir(this.directives, dir);\n        }\n        /**\n         * Adds a new `FormGroupName` directive instance to the form.\n         *\n         * @param dir The `FormGroupName` directive instance.\n         */\n        addFormGroup(dir) {\n            const ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        }\n        /**\n         * No-op method to remove the form group.\n         *\n         * @param dir The `FormGroupName` directive instance.\n         */\n        removeFormGroup(dir) { }\n        /**\n         * @description\n         * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n         *\n         * @param dir The `FormGroupName` directive instance.\n         */\n        getFormGroup(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * Adds a new `FormArrayName` directive instance to the form.\n         *\n         * @param dir The `FormArrayName` directive instance.\n         */\n        addFormArray(dir) {\n            const ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        }\n        /**\n         * No-op method to remove the form array.\n         *\n         * @param dir The `FormArrayName` directive instance.\n         */\n        removeFormArray(dir) { }\n        /**\n         * @description\n         * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n         *\n         * @param dir The `FormArrayName` directive instance.\n         */\n        getFormArray(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * Sets the new value for the provided `FormControlName` directive.\n         *\n         * @param dir The `FormControlName` directive instance.\n         * @param value The new value for the directive's control.\n         */\n        updateModel(dir, value) {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        }\n        /**\n         * @description\n         * Method called with the \"submit\" event is triggered on the form.\n         * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n         *\n         * @param $event The \"submit\" event object\n         */\n        onSubmit($event) {\n            this.submitted = true;\n            syncPendingControls(this.form, this.directives);\n            this.ngSubmit.emit($event);\n            return false;\n        }\n        /**\n         * @description\n         * Method called when the \"reset\" event is triggered on the form.\n         */\n        onReset() {\n            this.resetForm();\n        }\n        /**\n         * @description\n         * Resets the form to an initial value and resets its submitted status.\n         *\n         * @param value The new value for the form.\n         */\n        resetForm(value = undefined) {\n            this.form.reset(value);\n            this.submitted = false;\n        }\n        /** @internal */\n        _updateDomValue() {\n            this.directives.forEach(dir => {\n                const newCtrl = this.form.get(dir.path);\n                if (dir.control !== newCtrl) {\n                    cleanUpControl(dir.control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir.control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        }\n        _updateRegistrations() {\n            this.form._registerOnCollectionChange(() => this._updateDomValue());\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(() => { });\n            this._oldForm = this.form;\n        }\n        _updateValidators() {\n            const sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            const async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        }\n        _checkFormPresent() {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        }\n    };\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n    __decorate([\n        Input('formGroup'),\n        __metadata(\"design:type\", FormGroup)\n    ], FormGroupDirective.prototype, \"form\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], FormGroupDirective.prototype, \"ngSubmit\", void 0);\n    FormGroupDirective = __decorate([ __param(0, Optional()), __param(0, Self()), __param(0, Inject(NG_VALIDATORS)),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [Array, Array])\n    ], FormGroupDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\n    return FormGroupDirective;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /** @class */ (() => {\n    let FormGroupName = class FormGroupName extends AbstractFormGroupDirective {\n        constructor(parent, validators, asyncValidators) {\n            super();\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /** @internal */\n        _checkParentType() {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        }\n    };\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n    __decorate([\n        Input('formGroupName'),\n        __metadata(\"design:type\", Object)\n    ], FormGroupName.prototype, \"name\", void 0);\n    FormGroupName = __decorate([ __param(0, Optional()), __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [ControlContainer, Array, Array])\n    ], FormGroupName);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\n    return FormGroupName;\n})();\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /** @class */ (() => {\n    let FormArrayName = class FormArrayName extends ControlContainer {\n        constructor(parent, validators, asyncValidators) {\n            super();\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n         *\n         * @throws If the directive does not have a valid parent.\n         */\n        ngOnInit() {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        }\n        /**\n         * @description\n         * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n         */\n        ngOnDestroy() {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        }\n        /**\n         * @description\n         * The `FormArray` bound to this directive.\n         */\n        get control() {\n            return this.formDirective.getFormArray(this);\n        }\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n        }\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators registered with this\n         * directive.\n         */\n        get validator() {\n            return composeValidators(this._validators);\n        }\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this directive.\n         */\n        get asyncValidator() {\n            return composeAsyncValidators(this._asyncValidators);\n        }\n        _checkParentType() {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        }\n    };\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n    __decorate([\n        Input('formArrayName'),\n        __metadata(\"design:type\", Object)\n    ], FormArrayName.prototype, \"name\", void 0);\n    FormArrayName = __decorate([ __param(0, Optional()), __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __metadata(\"design:paramtypes\", [ControlContainer, Array, Array])\n    ], FormArrayName);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\n    return FormArrayName;\n})();\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /** @class */ (() => {\n    var FormControlName_1;\n    let FormControlName = FormControlName_1 = class FormControlName extends NgControl {\n        constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n            super();\n            this._ngModelWarningConfig = _ngModelWarningConfig;\n            this._added = false;\n            /** @deprecated as of v6 */\n            this.update = new EventEmitter();\n            /**\n             * @description\n             * Instance property used to track whether an ngModel warning has been sent out for this\n             * particular FormControlName instance. Used to support warning config of \"always\".\n             *\n             * @internal\n             */\n            this._ngModelWarningSent = false;\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @description\n         * Triggers a warning that this input should not be used with reactive forms.\n         */\n        set isDisabled(isDisabled) {\n            ReactiveErrors.disabledAttrWarning();\n        }\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                _ngModelWarning('formControlName', FormControlName_1, this, this._ngModelWarningConfig);\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        }\n        /**\n         * @description\n         * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n         */\n        ngOnDestroy() {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        }\n        /**\n         * @description\n         * Sets the new value for the view model and emits an `ngModelChange` event.\n         *\n         * @param newValue The new value for the view model.\n         */\n        viewToModelUpdate(newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n        }\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators\n         * registered with this directive.\n         */\n        get validator() {\n            return composeValidators(this._rawValidators);\n        }\n        /**\n         * @description\n         * Async validator function composed of all the async validators registered with this\n         * directive.\n         */\n        get asyncValidator() {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        }\n        _checkParentType() {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        }\n        _setUpControl() {\n            this._checkParentType();\n            this.control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        }\n    };\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    FormControlName._ngModelWarningSentOnce = false;\n    __decorate([\n        Input('formControlName'),\n        __metadata(\"design:type\", Object)\n    ], FormControlName.prototype, \"name\", void 0);\n    __decorate([\n        Input('disabled'),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], FormControlName.prototype, \"isDisabled\", null);\n    __decorate([\n        Input('ngModel'),\n        __metadata(\"design:type\", Object)\n    ], FormControlName.prototype, \"model\", void 0);\n    __decorate([\n        Output('ngModelChange'),\n        __metadata(\"design:type\", Object)\n    ], FormControlName.prototype, \"update\", void 0);\n    FormControlName = FormControlName_1 = __decorate([ __param(0, Optional()), __param(0, Host()), __param(0, SkipSelf()),\n        __param(1, Optional()), __param(1, Self()), __param(1, Inject(NG_VALIDATORS)),\n        __param(2, Optional()), __param(2, Self()), __param(2, Inject(NG_ASYNC_VALIDATORS)),\n        __param(3, Optional()), __param(3, Self()), __param(3, Inject(NG_VALUE_ACCESSOR)),\n        __param(4, Optional()), __param(4, Inject(NG_MODEL_WITH_FORM_CONTROL_WARNING)),\n        __metadata(\"design:paramtypes\", [ControlContainer,\n            Array,\n            Array, Array, Object])\n    ], FormControlName);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n    return FormControlName;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /** @class */ (() => {\n    let RequiredValidator = class RequiredValidator {\n        /**\n         * @description\n         * Tracks changes to the required attribute bound to this directive.\n         */\n        get required() {\n            return this._required;\n        }\n        set required(value) {\n            this._required = value != null && value !== false && `${value}` !== 'false';\n            if (this._onChange)\n                this._onChange();\n        }\n        /**\n         * @description\n         * Method that validates whether the control is empty.\n         * Returns the validation result if enabled, otherwise null.\n         */\n        validate(control) {\n            return this.required ? Validators.required(control) : null;\n        }\n        /**\n         * @description\n         * Registers a callback function to call when the validator inputs change.\n         *\n         * @param fn The callback function\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n    };\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RequiredValidator.prototype, \"required\", null);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, { required: [{\n            type: Input\n        }] }); })();\n    return RequiredValidator;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /** @class */ (() => {\n    let CheckboxRequiredValidator = class CheckboxRequiredValidator extends RequiredValidator {\n        /**\n         * @description\n         * Method that validates whether or not the checkbox has been checked.\n         * Returns the validation result if enabled, otherwise null.\n         */\n        validate(control) {\n            return this.required ? Validators.requiredTrue(control) : null;\n        }\n    };\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n    return CheckboxRequiredValidator;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /** @class */ (() => {\n    let EmailValidator = class EmailValidator {\n        /**\n         * @description\n         * Tracks changes to the email attribute bound to this directive.\n         */\n        set email(value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        }\n        /**\n         * @description\n         * Method that validates whether an email address is valid.\n         * Returns the validation result if enabled, otherwise null.\n         */\n        validate(control) {\n            return this._enabled ? Validators.email(control) : null;\n        }\n        /**\n         * @description\n         * Registers a callback function to call when the validator inputs change.\n         *\n         * @param fn The callback function\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n    };\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], EmailValidator.prototype, \"email\", null);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], null, { email: [{\n            type: Input\n        }] }); })();\n    return EmailValidator;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /** @class */ (() => {\n    let MinLengthValidator = class MinLengthValidator {\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use\n         * only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        }\n        /**\n         * @description\n         * Method that validates whether the value meets a minimum length\n         * requirement. Returns the validation result if enabled, otherwise null.\n         */\n        validate(control) {\n            return this.minlength == null ? null : this._validator(control);\n        }\n        /**\n         * @description\n         * Registers a callback function to call when the validator inputs change.\n         *\n         * @param fn The callback function\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n        _createValidator() {\n            this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n        }\n    };\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], MinLengthValidator.prototype, \"minlength\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], null, { minlength: [{\n            type: Input\n        }] }); })();\n    return MinLengthValidator;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /** @class */ (() => {\n    let MaxLengthValidator = class MaxLengthValidator {\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use\n         * only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        }\n        /**\n         * @description\n         * Method that validates whether the value exceeds\n         * the maximum length requirement.\n         */\n        validate(control) {\n            return this.maxlength != null ? this._validator(control) : null;\n        }\n        /**\n         * @description\n         * Registers a callback function to call when the validator inputs change.\n         *\n         * @param fn The callback function\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n        _createValidator() {\n            this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n        }\n    };\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], MaxLengthValidator.prototype, \"maxlength\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], null, { maxlength: [{\n            type: Input\n        }] }); })();\n    return MaxLengthValidator;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /** @class */ (() => {\n    let PatternValidator = class PatternValidator {\n        /**\n         * @description\n         * A lifecycle method called when the directive's inputs change. For internal use\n         * only.\n         *\n         * @param changes A object of key/value pairs for the set of changed inputs.\n         */\n        ngOnChanges(changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        }\n        /**\n         * @description\n         * Method that validates whether the value matches the\n         * the pattern requirement.\n         */\n        validate(control) {\n            return this._validator(control);\n        }\n        /**\n         * @description\n         * Registers a callback function to call when the validator inputs change.\n         *\n         * @param fn The callback function\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n        _createValidator() {\n            this._validator = Validators.pattern(this.pattern);\n        }\n    };\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], PatternValidator.prototype, \"pattern\", void 0);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], null, { pattern: [{\n            type: Input\n        }] }); })();\n    return PatternValidator;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /** @class */ (() => {\n    let ɵInternalFormsSharedModule = class ɵInternalFormsSharedModule {\n    };\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator], exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n    return ɵInternalFormsSharedModule;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /** @class */ (() => {\n    let FormBuilder = class FormBuilder {\n        /**\n         * @description\n         * Construct a new `FormGroup` instance.\n         *\n         * @param controlsConfig A collection of child controls. The key for each child is the name\n         * under which it is registered.\n         *\n         * @param options Configuration options object for the `FormGroup`. The object can\n         * have two shapes:\n         *\n         * 1) `AbstractControlOptions` object (preferred), which consists of:\n         * * `validators`: A synchronous validator function, or an array of validator functions\n         * * `asyncValidators`: A single async validator or array of async validator functions\n         * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n         * submit')\n         *\n         * 2) Legacy configuration object, which consists of:\n         * * `validator`: A synchronous validator function, or an array of validator functions\n         * * `asyncValidator`: A single async validator or array of async validator functions\n         *\n         */\n        group(controlsConfig, options = null) {\n            const controls = this._reduceControls(controlsConfig);\n            let validators = null;\n            let asyncValidators = null;\n            let updateOn = undefined;\n            if (options != null) {\n                if (isAbstractControlOptions(options)) {\n                    // `options` are `AbstractControlOptions`\n                    validators = options.validators != null ? options.validators : null;\n                    asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                    updateOn = options.updateOn != null ? options.updateOn : undefined;\n                }\n                else {\n                    // `options` are legacy form group options\n                    validators = options['validator'] != null ? options['validator'] : null;\n                    asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n                }\n            }\n            return new FormGroup(controls, { asyncValidators, updateOn, validators });\n        }\n        /**\n         * @description\n         * Construct a new `FormControl` with the given state, validators and options.\n         *\n         * @param formState Initializes the control with an initial state value, or\n         * with an object that contains both a value and a disabled status.\n         *\n         * @param validatorOrOpts A synchronous validator function, or an array of\n         * such functions, or an `AbstractControlOptions` object that contains\n         * validation functions and a validation trigger.\n         *\n         * @param asyncValidator A single async validator or array of async validator\n         * functions.\n         *\n         * @usageNotes\n         *\n         * ### Initialize a control as disabled\n         *\n         * The following example returns a control with an initial value in a disabled state.\n         *\n         * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n         * </code-example>\n         */\n        control(formState, validatorOrOpts, asyncValidator) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        /**\n         * Constructs a new `FormArray` from the given array of configurations,\n         * validators and options.\n         *\n         * @param controlsConfig An array of child controls or control configs. Each\n         * child control is given an index when it is registered.\n         *\n         * @param validatorOrOpts A synchronous validator function, or an array of\n         * such functions, or an `AbstractControlOptions` object that contains\n         * validation functions and a validation trigger.\n         *\n         * @param asyncValidator A single async validator or array of async validator\n         * functions.\n         */\n        array(controlsConfig, validatorOrOpts, asyncValidator) {\n            const controls = controlsConfig.map(c => this._createControl(c));\n            return new FormArray(controls, validatorOrOpts, asyncValidator);\n        }\n        /** @internal */\n        _reduceControls(controlsConfig) {\n            const controls = {};\n            Object.keys(controlsConfig).forEach(controlName => {\n                controls[controlName] = this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        }\n        /** @internal */\n        _createControl(controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                const value = controlConfig[0];\n                const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        }\n    };\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: function (t) { return FormBuilder.ɵfac(t); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n    return FormBuilder;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.0-rc.0');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /** @class */ (() => {\n    let FormsModule = class FormsModule {\n    };\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n    return FormsModule;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /** @class */ (() => {\n    var ReactiveFormsModule_1;\n    let ReactiveFormsModule = ReactiveFormsModule_1 = class ReactiveFormsModule {\n        /**\n         * @description\n         * Provides options for configuring the reactive forms module.\n         *\n         * @param opts An object of configuration options\n         * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n         * binding is used with reactive form directives.\n         */\n        static withConfig(opts) {\n            return {\n                ngModule: ReactiveFormsModule_1,\n                providers: [\n                    { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n                ]\n            };\n        }\n    };\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n    return ReactiveFormsModule;\n})();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Directionality, factory: Directionality.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n\n//# sourceMappingURL=bidi.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of the Angular Component Development Kit.\n * @type {?}\n */\nconst VERSION = new Version('8.1.1');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION };\n\n//# sourceMappingURL=cdk.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n\n//# sourceMappingURL=coercion.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\nPlatform.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Platform, factory: Platform.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType };\n\n//# sourceMappingURL=platform.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\nMutationObserverFactory.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MutationObserverFactory, factory: MutationObserverFactory.ɵfac, providedIn: 'root' });\n/** @nocollapse */ MutationObserverFactory.ngInjectableDef = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\nContentObserver.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ContentObserver, factory: ContentObserver.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ngInjectableDef = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, ɵɵdefineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION } from '@angular/cdk';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION$1 = new Version('8.1.1');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$2 = new Version('8.1.1');\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @private\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        if (VERSION$2.full !== VERSION.full) {\n            console.warn('The Angular Material version (' + VERSION$2.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !((/** @type {?} */ (this._window)))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); }, imports: [[BidiModule], BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc1.Platform }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ErrorStateMatcher, factory: ErrorStateMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = RippleState.HIDDEN;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    setupTriggerEvents(element) {\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                } }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                } }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc2.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option'\n                },\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VERSION$1 as VERSION, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n\n//# sourceMappingURL=core.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{ selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                } }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' } }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{ selector: 'mat-card-title-group',\n                template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' } }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n\n//# sourceMappingURL=card.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n//# sourceMappingURL=takeUntil.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { Directive, ElementRef, EventEmitter, Injectable, NgZone, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceElement, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AutofillMonitor, factory: AutofillMonitor.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ngInjectableDef = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = value;\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = value;\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to it's original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight === undefined) {\n            return;\n        }\n        this._textareaElement.style.height = this._initialHeight;\n    }\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1',\n                    '(input)': '_noopInputHandler()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n        // and ViewEngine. We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this.updateOutlineGap()));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!(/** @type {?} */ (document.documentElement)).contains(this._elementRef.nativeElement)) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls.item(i).style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls.item(i).style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline', { static: false },] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer', { static: false },] }],\n    _label: [{ type: ViewChild, args: ['label', { static: false },] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: false },] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel, { static: false },] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder, { static: false },] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError,] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint,] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix,] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{ selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                // MatInput is a directive and can't have styles, so we need to include its styles here\n                // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n                // big deal for people who aren't using MatInput.\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"],\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline', { static: false }]\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer', { static: false }]\n        }], _label: [{\n            type: ViewChild,\n            args: ['label', { static: false }]\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: false }]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: false }]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder, { static: false }]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Inject, NgZone, Optional, Self, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], hostBindings: function MatTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1',\n                    '(input)': '_noopInputHandler()'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @protected\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            CommonModule,\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [CommonModule,\n        TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    CommonModule,\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTextareaAutosize, MatInput, getMatInputUnsupportedTypeError, MatInputModule, MAT_INPUT_VALUE_ACCESSOR };\n\n//# sourceMappingURL=input.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = (() => Object.prototype.toString)();\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map","import { Observable, OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AngularFireAction, DatabaseSnapshot } from '@angular/fire/database';\nimport { Input } from '@angular/core';\n\n// This is an OperatorFunction\nexport function keyify<T extends object>(source: Observable<AngularFireAction<DatabaseSnapshot<T>>[]>): Observable<({key: string} & T)[]> {\n    return source.pipe(\n        map(\n            // Typing is wrong here as of 2018-06-23, see https://github.com/Microsoft/TypeScript/issues/10727\n            actions => actions.map(action => ({ key: action.key, ...(<any>action.payload.val()) }))\n        ),\n        map(list => list),\n\n    );\n}\n","let nextHandle = 1;\nconst tasksByHandle = {};\nfunction runIfPresent(handle) {\n    const cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(() => runIfPresent(handle));\n        return handle;\n    },\n    clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AsapAction.js.map","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asap = new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map","import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map","import { isPlatformServer } from '@angular/common';\nimport { queueScheduler, asyncScheduler } from 'rxjs';\nimport { tap, subscribeOn, observeOn } from 'rxjs/operators';\nimport { InjectionToken, Version, NgZone, Optional, VERSION as VERSION$1, NgModule, Inject, PLATFORM_ID } from '@angular/core';\nimport { apps, initializeApp, registerVersion } from 'firebase/app';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction noop() { }\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\nclass ɵZoneScheduler {\n    /**\n     * @param {?} zone\n     * @param {?=} delegate\n     */\n    constructor(zone, delegate = queueScheduler) {\n        this.zone = zone;\n        this.delegate = delegate;\n    }\n    /**\n     * @return {?}\n     */\n    now() {\n        return this.delegate.now();\n    }\n    /**\n     * @param {?} work\n     * @param {?=} delay\n     * @param {?=} state\n     * @return {?}\n     */\n    schedule(work, delay, state) {\n        /** @type {?} */\n        const targetZone = this.zone;\n        // Wrap the specified work function to make sure that if nested scheduling takes place the\n        // work is executed in the correct zone\n        /** @type {?} */\n        const workInZone = (/**\n         * @this {?}\n         * @param {?} state\n         * @return {?}\n         */\n        function (state) {\n            targetZone.runGuarded((/**\n             * @return {?}\n             */\n            () => {\n                work.apply(this, [state]);\n            }));\n        })\n        // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n        // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n        // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n        ;\n        // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n        // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n        // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n        return this.delegate.schedule(workInZone, delay, state);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵZoneScheduler.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵZoneScheduler.prototype.delegate;\n}\n/**\n * @template T\n */\nclass ɵBlockUntilFirstOperator {\n    /**\n     * @param {?} zone\n     */\n    constructor(zone) {\n        this.zone = zone;\n        this.task = null;\n    }\n    /**\n     * @param {?} subscriber\n     * @param {?} source\n     * @return {?}\n     */\n    call(subscriber, source) {\n        /** @type {?} */\n        const unscheduleTask = this.unscheduleTask.bind(this);\n        this.task = this.zone.run((/**\n         * @return {?}\n         */\n        () => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop)));\n        return source.pipe(tap(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    unscheduleTask() {\n        if (this.task != null && this.task.state === 'scheduled') {\n            this.task.invoke();\n            this.task = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵBlockUntilFirstOperator.prototype.task;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵBlockUntilFirstOperator.prototype.zone;\n}\nclass ɵAngularFireSchedulers {\n    /**\n     * @param {?} ngZone\n     */\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.outsideAngular = ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => new ɵZoneScheduler(Zone.current)));\n        this.insideAngular = ngZone.run((/**\n         * @return {?}\n         */\n        () => new ɵZoneScheduler(Zone.current, asyncScheduler)));\n    }\n}\nif (false) {\n    /** @type {?} */\n    ɵAngularFireSchedulers.prototype.outsideAngular;\n    /** @type {?} */\n    ɵAngularFireSchedulers.prototype.insideAngular;\n    /** @type {?} */\n    ɵAngularFireSchedulers.prototype.ngZone;\n}\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n * @param {?} schedulers\n * @param {?} platformId\n * @return {?}\n */\nfunction ɵkeepUnstableUntilFirstFactory(schedulers, platformId) {\n    return (/**\n     * @template T\n     * @param {?} obs$\n     * @return {?}\n     */\n    function keepUnstableUntilFirst(obs$) {\n        if (isPlatformServer(platformId)) {\n            obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\n        }\n        return obs$.pipe(\n        // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n        subscribeOn(schedulers.outsideAngular), \n        // Run operators inside the angular zone (e.g. side effects via tap())\n        observeOn(schedulers.insideAngular)\n        // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n        // share()\n        );\n    });\n}\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\n/** @type {?} */\nconst noopFunctions = ['ngOnDestroy'];\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\n/** @type {?} */\nconst ɵlazySDKProxy = (/**\n * @param {?} klass\n * @param {?} observable\n * @param {?} zone\n * @return {?}\n */\n(klass, observable, zone) => {\n    return new Proxy(klass, {\n        get: (/**\n         * @param {?} _\n         * @param {?} name\n         * @return {?}\n         */\n        (_, name) => zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (klass[name]) {\n                return klass[name];\n            }\n            if (noopFunctions.includes(name)) {\n                return (/**\n                 * @return {?}\n                 */\n                () => { });\n            }\n            /** @type {?} */\n            let promise = observable.toPromise().then((/**\n             * @param {?} mod\n             * @return {?}\n             */\n            mod => {\n                /** @type {?} */\n                const ret = mod && mod[name];\n                // TODO move to proper type guards\n                if (typeof ret == 'function') {\n                    return ret.bind(mod);\n                }\n                else if (ret && ret.then) {\n                    return ret.then((/**\n                     * @param {?} res\n                     * @return {?}\n                     */\n                    (res) => zone.run((/**\n                     * @return {?}\n                     */\n                    () => res))));\n                }\n                else {\n                    return zone.run((/**\n                     * @return {?}\n                     */\n                    () => ret));\n                }\n            }));\n            // recurse the proxy\n            return new Proxy((/**\n             * @return {?}\n             */\n            () => undefined), {\n                get: (/**\n                 * @param {?} _\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (_, name) => promise[name]),\n                // TODO handle callbacks as transparently as I can \n                apply: (/**\n                 * @param {?} self\n                 * @param {?} _\n                 * @param {?} args\n                 * @return {?}\n                 */\n                (self, _, args) => promise.then((/**\n                 * @param {?} it\n                 * @return {?}\n                 */\n                it => it && it(...args))))\n            });\n        })))\n    });\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction FirebaseOptions() { }\n;\n/**\n * @record\n */\nfunction FirebaseAppConfig() { }\n;\n/** @type {?} */\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\n/** @type {?} */\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.nameOrConfig');\n// Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\nclass FirebaseApp {\n}\nif (false) {\n    /** @type {?} */\n    FirebaseApp.prototype.name;\n    /** @type {?} */\n    FirebaseApp.prototype.options;\n    /** @type {?} */\n    FirebaseApp.prototype.analytics;\n    /** @type {?} */\n    FirebaseApp.prototype.auth;\n    /** @type {?} */\n    FirebaseApp.prototype.database;\n    /** @type {?} */\n    FirebaseApp.prototype.messaging;\n    /** @type {?} */\n    FirebaseApp.prototype.performance;\n    /** @type {?} */\n    FirebaseApp.prototype.storage;\n    /** @type {?} */\n    FirebaseApp.prototype.delete;\n    /** @type {?} */\n    FirebaseApp.prototype.firestore;\n    /** @type {?} */\n    FirebaseApp.prototype.functions;\n    /** @type {?} */\n    FirebaseApp.prototype.remoteConfig;\n}\n/** @type {?} */\nconst VERSION = new Version('6.0.0-rc.1');\n/**\n * @param {?} options\n * @param {?} zone\n * @param {?=} nameOrConfig\n * @return {?}\n */\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n    /** @type {?} */\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    /** @type {?} */\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    // Added any due to some inconsistency between @firebase/app and firebase types\n    /** @type {?} */\n    const existingApp = (/** @type {?} */ (apps.filter((/**\n     * @param {?} app\n     * @return {?}\n     */\n    app => app && app.name === config.name))[0]));\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n    return (/** @type {?} */ ((existingApp || zone.runOutsideAngular((/**\n     * @return {?}\n     */\n    () => initializeApp(options, (/** @type {?} */ (config))))))));\n}\n/** @type {?} */\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: ɵfirebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\nclass AngularFireModule {\n    /**\n     * @param {?} platformId\n     */\n    constructor(platformId) {\n        registerVersion('angularfire', VERSION.full, platformId.toString());\n        registerVersion('angular', VERSION$1.full);\n    }\n    /**\n     * @param {?} options\n     * @param {?=} nameOrConfig\n     * @return {?}\n     */\n    static initializeApp(options, nameOrConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        };\n    }\n}\nAngularFireModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireModule });\nAngularFireModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireModule_Factory(t) { return new (t || AngularFireModule)(ɵngcc0.ɵɵinject(PLATFORM_ID)); }, providers: [FirebaseAppProvider] });\n/** @nocollapse */\nAngularFireModule.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireModule, [{\n        type: NgModule,\n        args: [{\n                providers: [FirebaseAppProvider]\n            }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, VERSION, ɵAngularFireSchedulers, ɵBlockUntilFirstOperator, ɵZoneScheduler, ɵfirebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵlazySDKProxy };\n\n//# sourceMappingURL=angular-fire.js.map","import { Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { of, Observable, from } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// WARNING: interface has both a type and a value, skipping emit\nimport * as ɵngcc0 from '@angular/core';\n;\nclass AngularFireAuth {\n    /**\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} platformId\n     * @param {?} zone\n     */\n    constructor(options, nameOrConfig, platformId, zone) {\n        /** @type {?} */\n        const schedulers = new ɵAngularFireSchedulers(zone);\n        /** @type {?} */\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers, platformId);\n        /** @type {?} */\n        const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @return {?}\n         */\n        () => zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => import('firebase/auth'))))), map((/**\n         * @return {?}\n         */\n        () => ɵfirebaseAppFactory(options, zone, nameOrConfig))), map((/**\n         * @param {?} app\n         * @return {?}\n         */\n        app => app.auth())), shareReplay({ bufferSize: 1, refCount: false }));\n        this.authState = auth.pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @param {?} auth\n         * @return {?}\n         */\n        auth => new Observable(auth.onAuthStateChanged.bind(auth)))), keepUnstableUntilFirst);\n        this.user = auth.pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @param {?} auth\n         * @return {?}\n         */\n        auth => new Observable(auth.onIdTokenChanged.bind(auth)))), keepUnstableUntilFirst);\n        this.idToken = this.user.pipe(switchMap((/**\n         * @param {?} user\n         * @return {?}\n         */\n        user => user ? from(user.getIdToken()) : of(null))));\n        this.idTokenResult = this.user.pipe(switchMap((/**\n         * @param {?} user\n         * @return {?}\n         */\n        user => user ? from(user.getIdTokenResult()) : of(null))));\n        return ɵlazySDKProxy(this, auth, zone);\n    }\n}\nAngularFireAuth.ɵfac = function AngularFireAuth_Factory(t) { return new (t || AngularFireAuth)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAngularFireAuth.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone }\n];\n/** @nocollapse */ AngularFireAuth.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireAuth_Factory() { return new AngularFireAuth(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone)); }, token: AngularFireAuth, providedIn: \"any\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuth, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n     * @type {?}\n     */\n    AngularFireAuth.prototype.authState;\n    /**\n     * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n     * @type {?}\n     */\n    AngularFireAuth.prototype.idToken;\n    /**\n     * Observable of the currently signed-in user (or null).\n     * @type {?}\n     */\n    AngularFireAuth.prototype.user;\n    /**\n     * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n     * helper properties for getting different data associated with the token as well as all the decoded payload claims\n     * (or null).\n     * @type {?}\n     */\n    AngularFireAuth.prototype.idTokenResult;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AngularFireAuthModule {\n}\nAngularFireAuthModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireAuthModule });\nAngularFireAuthModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireAuthModule_Factory(t) { return new (t || AngularFireAuthModule)(); }, providers: [AngularFireAuth] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireAuth]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFireAuth, AngularFireAuthModule };\n\n//# sourceMappingURL=angular-fire-auth.js.map","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AdminService } from '../../shared/admin.service';\nimport { auth as firebaseAuth} from 'firebase/app';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n    isAdmin: Observable<boolean>;\n    name: Observable<string>;\n    uid: Observable<string>;\n\n    constructor(public auth: AngularFireAuth, public admin: AdminService) {\n        // this.af = {auth:{map:()=>{}}};\n        const state = auth.authState;\n        console.log('State is', state);\n\n        this.isAdmin = state.pipe(map(authState => !!authState && authState.uid === 'uFgljRJxq9Th4bkTIaDsQFwJuhJ2'));\n        this.name = state.pipe(map(authState => (authState ? authState.displayName : null)));\n        this.uid = state.pipe(map(authState => (authState ? authState.uid : null)));\n\n        this.isAdmin.subscribe(isAdmin => {\n            this.admin.isAdmin = isAdmin;\n        });\n    }\n    login() {\n        this.auth.signInWithPopup(new firebaseAuth.GoogleAuthProvider());\n    }\n\n    logout() {\n        this.auth.signOut();\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n    return (source) => source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nclass DistinctUntilChangedOperator {\n    constructor(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    }\n}\nclass DistinctUntilChangedSubscriber extends Subscriber {\n    constructor(destination, compare, keySelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(value) {\n        let key;\n        try {\n            const { keySelector } = this;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        let result = false;\n        if (this.hasKey) {\n            try {\n                const { compare } = this;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map","import { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param {?} database\n * @param {?} pathRef\n * @return {?}\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? (/** @type {?} */ (pathRef))\n        : database.ref((/** @type {?} */ (pathRef)));\n}\n/**\n * @param {?} item\n * @param {?} cases\n * @return {?}\n */\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return (/** @type {?} */ (cases.firebaseCase))();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return (/** @type {?} */ (cases.snapshotCase))();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction SnapshotPrevKey() { }\nif (false) {\n    /** @type {?} */\n    SnapshotPrevKey.prototype.snapshot;\n    /** @type {?} */\n    SnapshotPrevKey.prototype.prevKey;\n}\n/**\n * Create an observable from a Database Reference or Database Query.\n * @template T\n * @param {?} ref Database Reference\n * @param {?} event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param {?=} listenType\n * @param {?=} scheduler\n * @return {?}\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable((/**\n     * @param {?} subscriber\n     * @return {?}\n     */\n    subscriber => {\n        /** @type {?} */\n        let fn = null;\n        fn = ref[listenType](event, (/**\n         * @param {?} snapshot\n         * @param {?} prevKey\n         * @return {?}\n         */\n        (snapshot, prevKey) => {\n            scheduler.schedule((/**\n             * @return {?}\n             */\n            () => {\n                subscriber.next({ snapshot, prevKey });\n            }));\n            if (listenType == 'once') {\n                scheduler.schedule((/**\n                 * @return {?}\n                 */\n                () => subscriber.complete()));\n            }\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        err => {\n            scheduler.schedule((/**\n             * @return {?}\n             */\n            () => subscriber.error(err)));\n        }));\n        if (listenType == 'on') {\n            return {\n                /**\n                 * @return {?}\n                 */\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return { /**\n                 * @return {?}\n                 */\n                unsubscribe() { } };\n        }\n    })).pipe(map((/**\n     * @param {?} payload\n     * @return {?}\n     */\n    payload => {\n        const { snapshot, prevKey } = payload;\n        /** @type {?} */\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    })), share());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} ref\n * @param {?} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap((/**\n     * @param {?} snapshotAction\n     * @return {?}\n     */\n    snapshotAction => {\n        /** @type {?} */\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => childEvent$.push(fromRef(ref, event, 'on', scheduler))));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    })), distinctUntilChanged());\n}\n/**\n * @template T\n * @param {?} changes\n * @param {?} key\n * @return {?}\n */\nfunction positionFor(changes, key) {\n    /** @type {?} */\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} changes\n * @param {?=} prevKey\n * @return {?}\n */\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        /** @type {?} */\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\n/**\n * @param {?} current\n * @param {?} action\n * @return {?}\n */\nfunction buildView(current, action) {\n    const { payload, type, prevKey, key } = action;\n    /** @type {?} */\n    const currentKeyPosition = positionFor(current, key);\n    /** @type {?} */\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                /** @type {?} */\n                let prevKey = null;\n                action.payload.forEach((/**\n                 * @param {?} payload\n                 * @return {?}\n                 */\n                payload => {\n                    /** @type {?} */\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                }));\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                /** @type {?} */\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    x => x.payload.key !== payload.key));\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.payload.key !== payload.key));\n        case 'child_changed':\n            return current.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.payload.key === key ? action : x));\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                /** @type {?} */\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?=} events\n * @return {?}\n */\nfunction validateEventsArray(events) {\n    if (isNil(events) || (/** @type {?} */ (events)).length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, (/** @type {?} */ (events)), scheduler);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction stateChanges(query, events, scheduler) {\n    events = (/** @type {?} */ (validateEventsArray(events)));\n    /** @type {?} */\n    const childEvent$ = events.map((/**\n     * @param {?} event\n     * @return {?}\n     */\n    event => fromRef(query, event, 'on', scheduler)));\n    return merge(...childEvent$);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction auditTrail(query, events, scheduler) {\n    /** @type {?} */\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((/**\n     * @param {?} current\n     * @param {?} action\n     * @return {?}\n     */\n    (current, action) => [...current, action]), []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\n/**\n * @record\n */\nfunction LoadedMetadata() { }\nif (false) {\n    /** @type {?} */\n    LoadedMetadata.prototype.data;\n    /** @type {?} */\n    LoadedMetadata.prototype.lastKeyToLoad;\n}\n/**\n * @template T\n * @param {?} query\n * @param {?=} scheduler\n * @return {?}\n */\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map((/**\n     * @param {?} data\n     * @return {?}\n     */\n    data => {\n        // Store the last key in the data set\n        /** @type {?} */\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach((/**\n         * @param {?} child\n         * @return {?}\n         */\n        child => {\n            lastKeyToLoad = child.key;\n            return false;\n        }));\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    })));\n}\n/**\n * @template T\n * @param {?} query\n * @param {?} action$\n * @param {?=} scheduler\n * @return {?}\n */\nfunction waitForLoaded(query, action$, scheduler) {\n    /** @type {?} */\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([loaded, actions]) => {\n        // Store the last key in the data set\n        /** @type {?} */\n        let lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        /** @type {?} */\n        const loadedKeys = actions.map((/**\n         * @param {?} snap\n         * @return {?}\n         */\n        snap => snap.key));\n        return { actions, lastKeyToLoad, loadedKeys };\n    })), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile((/**\n     * @param {?} meta\n     * @return {?}\n     */\n    meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1)), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map((/**\n     * @param {?} meta\n     * @return {?}\n     */\n    meta => meta.actions)));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} ref\n * @param {?} operation\n * @return {?}\n */\nfunction createDataOperationMethod(ref, operation) {\n    return (/**\n     * @template T\n     * @param {?} item\n     * @param {?} value\n     * @return {?}\n     */\n    function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: (/**\n             * @return {?}\n             */\n            () => ref.child((/** @type {?} */ (item)))[operation](value)),\n            firebaseCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item)))[operation](value)),\n            snapshotCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item))).ref[operation](value))\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\n/**\n * @template T\n * @param {?} ref\n * @return {?}\n */\nfunction createRemoveMethod(ref) {\n    return (/**\n     * @param {?=} item\n     * @return {?}\n     */\n    function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: (/**\n             * @return {?}\n             */\n            () => ref.child((/** @type {?} */ (item))).remove()),\n            firebaseCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item))).remove()),\n            snapshotCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item))).ref.remove())\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?} afDatabase\n * @return {?}\n */\nfunction createListReference(query, afDatabase) {\n    /** @type {?} */\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    return {\n        query,\n        update: createDataOperationMethod(query.ref, 'update'),\n        set: createDataOperationMethod(query.ref, 'set'),\n        push: (/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => query.ref.push(data)),\n        remove: createRemoveMethod(query.ref),\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        valueChanges(events) {\n            /** @type {?} */\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map((/**\n             * @param {?} actions\n             * @return {?}\n             */\n            actions => actions.map((/**\n             * @param {?} a\n             * @return {?}\n             */\n            a => (/** @type {?} */ (a.payload.val())))))));\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} scheduler\n * @return {?}\n */\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return (/**\n     * @return {?}\n     */\n    function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?} afDatabase\n * @return {?}\n */\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        /**\n         * @template T\n         * @return {?}\n         */\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe((/** @type {?} */ (afDatabase.keepUnstableUntilFirst)));\n        },\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        update(data) { return (/** @type {?} */ (query.ref.update((/** @type {?} */ (data))))); },\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set(data) { return (/** @type {?} */ (query.ref.set(data))); },\n        /**\n         * @return {?}\n         */\n        remove() { return (/** @type {?} */ (query.ref.remove())); },\n        /**\n         * @template T\n         * @return {?}\n         */\n        valueChanges() {\n            /** @type {?} */\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map((/**\n             * @param {?} action\n             * @return {?}\n             */\n            action => action.payload.exists() ? (/** @type {?} */ (action.payload.val())) : null)));\n        },\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nclass AngularFireDatabase {\n    /**\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} databaseURL\n     * @param {?} platformId\n     * @param {?} zone\n     */\n    constructor(options, nameOrConfig, databaseURL, platformId, zone) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n        this.database = zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n            if (!app.database) {\n                throw \"You must import 'firebase/database' before using AngularFireDatabase\";\n            }\n            return app.database(databaseURL || undefined);\n        }));\n    }\n    /**\n     * @template T\n     * @param {?} pathOrRef\n     * @param {?=} queryFn\n     * @return {?}\n     */\n    list(pathOrRef, queryFn) {\n        /** @type {?} */\n        const ref = getRef(this.database, pathOrRef);\n        /** @type {?} */\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    /**\n     * @template T\n     * @param {?} pathOrRef\n     * @return {?}\n     */\n    object(pathOrRef) {\n        /** @type {?} */\n        const ref = getRef(this.database, pathOrRef);\n        return createObjectReference(ref, this);\n    }\n    /**\n     * @return {?}\n     */\n    createPushId() {\n        return this.database.ref().push().key;\n    }\n}\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) { return new (t || AngularFireDatabase)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(URL, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAngularFireDatabase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [URL,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone }\n];\n/** @nocollapse */ AngularFireDatabase.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireDatabase_Factory() { return new AngularFireDatabase(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(URL, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone)); }, token: AngularFireDatabase, providedIn: \"any\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireDatabase, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [URL]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    AngularFireDatabase.prototype.database;\n    /** @type {?} */\n    AngularFireDatabase.prototype.schedulers;\n    /** @type {?} */\n    AngularFireDatabase.prototype.keepUnstableUntilFirst;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AngularFireDatabaseModule {\n}\nAngularFireDatabaseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireDatabaseModule });\nAngularFireDatabaseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireDatabaseModule_Factory(t) { return new (t || AngularFireDatabaseModule)(); }, providers: [AngularFireDatabase] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireDatabase]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n\n//# sourceMappingURL=angular-fire-database.js.map","import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(authWrapper, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    var bucket = authWrapper.bucket();\r\n    if (bucket === null) {\r\n        throw noDefaultBucket();\r\n    }\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(authWrapper, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(authWrapper, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(authWrapper) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(authWrapper, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.authWrapper, _this.location);\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.authWrapper, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map = new Map();\r\n        this.id = MIN_SAFE_INTEGER;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     *\r\n     * @param request The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (request) {\r\n        var _this = this;\r\n        var id = this.id;\r\n        this.id++;\r\n        this.map.set(id, request);\r\n        request.getPromise().then(function () { return _this.map.delete(id); }, function () { return _this.map.delete(id); });\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        this.map.forEach(function (v) {\r\n            v && v.cancel(true);\r\n        });\r\n        this.map.clear();\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, authProvider, maker, requestMaker, service, pool) {\r\n        var _a;\r\n        this.bucket_ = null;\r\n        this.appId_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n                this.appId_ = (_a = options.appId) !== null && _a !== void 0 ? _a : null;\r\n            }\r\n        }\r\n        this.authProvider_ = authProvider;\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        var auth = this.authProvider_.getImmediate({ optional: true });\r\n        if (auth) {\r\n            return auth.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function () { return null; });\r\n        }\r\n        else {\r\n            return Promise.resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, this.appId_, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, authProvider, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, authProvider, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.30\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    return new Service(app, authProvider, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport { keyify } from './shared/keyify.operator';\n\nexport interface Image {\n    path: string;\n    filename: string;\n    downloadURL?: string;\n}\n\n@Component({\n    selector: 'image-upload',\n    template: `\n  <h2>Upload a File</h2>\n  <form ngNoForm>\n    <input id=\"file\" name=\"file\" type=\"file\" >\n    <button (click)=\"upload()\" type=\"button\">Upload</button>\n    </form>\n\n    <h2>File Gallery</h2>\n    <div style=\"overflow:hidden;\">\n        <div *ngFor=\"let img of imageList | async\"\n            style=\"position:relative;width:100px;height:100px;float:left;display:flex;justify-content:center;align-items:center;\">\n            <img *ngIf=\"img && img.downloadURL && img.downloadURL | async\"\n                [src]=\"img.downloadURL | async\"\n                alt=\"uploaded image\"\n                style=\"max-width:100px;max-height:100px;\">\n\n            <button (click)=\"delete(img)\" style=\"position:absolute;top:2px;right:2px;\">[x]</button>\n        </div>\n    </div>\n  `,\n})\nexport class UploadComponent implements OnChanges {\n    /**\n     * The name of the folder for images\n     * eg. posts/angular-is-awesome\n     */\n    @Input() folder: string;\n\n    fileList: AngularFireList<Image>;\n    imageList: Observable<any>;\n\n    constructor(public db: AngularFireDatabase, public router: Router) {}\n\n    ngOnChanges() {\n        console.log('new values for folder');\n        const storage = firebase.storage();\n\n        this.fileList = this.db.list<Image>(`/${this.folder}/images`);\n        this.imageList = this.fileList.snapshotChanges().pipe(\n            keyify,\n            map(itemList =>\n                itemList.map(item => {\n                    const pathReference = storage.ref(item.path);\n                    const result = { $key: item.key, path: item.path, downloadURL: null, filename: item.filename };\n                    // This Promise must be wrapped in Promise.resolve because the thennable from\n                    // firebase isn't monkeypatched by zones and therefore doesn't trigger CD\n                    result.downloadURL = Promise.resolve(pathReference.getDownloadURL());\n\n                    return result;\n                })\n            )\n        );\n    }\n\n    upload() {\n        // Create a root reference\n        const storageRef = firebase.storage().ref();\n\n        const success = false;\n\n        if ((<HTMLInputElement>document.getElementById('file')).files.length <= 0) {\n            console.log('No files found to upload.');\n            return;\n        }\n\n        // This currently only grabs item 0, TODO refactor it to grab them all\n        for (const selectedFile of [(<HTMLInputElement>document.getElementById('file')).files[0]]) {\n            console.log(selectedFile);\n            // Make local copies of services because \"this\" will be clobbered\n            const router = this.router;\n            const folder = this.folder;\n            const path = `/${this.folder}/${selectedFile.name}`;\n            const iRef = storageRef.child(path);\n            const db = this.db;\n            // cache files for up to a week\n            iRef.put(selectedFile, { cacheControl: 'max-age=604800' }).then(snapshot => {\n                console.log('Uploaded a blob or file! Now storing the reference at', `/${this.folder}/images/`);\n                db.list(`/${folder}/images/`).push({ path: path, filename: selectedFile.name });\n            });\n        }\n    }\n    delete(image: Image & { key: string }) {\n        const storagePath = image.path;\n        const referencePath = `${this.folder}/images/` + image.key;\n\n        // Do these as two separate steps so you can still try delete ref if file no longer exists\n\n        // Delete from Storage\n        firebase\n            .storage()\n            .ref()\n            .child(storagePath)\n            .delete()\n            .then(() => {}, error => console.error('Error deleting stored file', storagePath));\n\n        // Delete references\n        this.db.object(referencePath).remove();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './shared/auth.service';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { map } from 'rxjs/operators';\nimport { Post } from '../shared/post.service';\nimport { keyify } from './shared/keyify.operator';\n\nexport interface Talk {\n    title: string;\n}\n\n@Component({\n    template: `\n        <div class=\"padded\" *ngIf=\"auth.isAdmin | async\">\n            <h2><span [title]=\"auth.uid | async\">{{auth.name | async}}</span> Supervision (<a (click)=\"auth.logout()\">logout</a>)</h2>\n            <ul>\n                <li><a routerLink=\"upload\">Upload a file</a></li>\n            </ul>\n\n            <div style=\"overflow:hidden;\">\n                <a *ngFor=\"let post of posts | async\" [routerLink]=\"post.key\">\n                    <mat-card style=\"margin:0 16px 16px 0;width:300px;height:125px;float:left;\">\n                        <img *ngIf=\"post.image\" [src]=\"post.image\" [alt]=\"post.title\" style=\"height:40px;margin:0px auto;display:block;\">\n                        <div><strong>{{post.title}}</strong></div>\n                        <div>{{post.date}}</div>\n                    </mat-card>\n                </a>\n            </div>\n\n            <div>\n                <h2>New Post</h2>\n                <button routerLink=\"new\">Create</button>\n            </div>\n\n\n            <div>\n                <h2>Manage Talks</h2>\n                <select [(ngModel)]=\"selectedTalk\">\n                    <option *ngFor=\"let talk of talkList | async\" [ngValue]=\"talk\">{{talk.title}}</option>\n                </select>\n                <div *ngIf=\"selectedTalk\">\n                    <h3>Talk Image Upload</h3>\n                    <mat-form-field><input matInput [(ngModel)]=\"talkName\"></mat-form-field>\n                    <image-upload [folder]=\"'talks/'+selectedTalk.key\"></image-upload>\n                </div>\n            </div>\n        </div>\n        <div class=\"padded\" *ngIf=\"(auth.isAdmin | async) == false\">\n            <p>You need more access.</p>\n            <button (click)=\"auth.login()\">Login</button>\n        </div>\n        `,\n})\nexport class AdminComponent {\n    posts = this.db\n        .list<Post>('/posts')\n        .snapshotChanges()\n        .pipe(\n            keyify,\n            map(list => list.sort((a, b) => (a.date >= b.date ? -1 : 1)))\n        );\n\n    talkName: string;\n    talkList = this.db\n        .list<Talk>('/talks/')\n        .snapshotChanges()\n        .pipe(keyify);\n\n    selectedTalk;\n\n    constructor(public auth: AuthService, public db: AngularFireDatabase) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFireDatabase, AngularFireObject, AngularFireList } from '@angular/fire/database';\nimport { Post, PostService } from '../../shared/post.service';\n\n\n@Injectable()\nexport class EditablePostService {\n    constructor(public db: AngularFireDatabase, public ps: PostService) {\n\n    }\n    getObject(id: string): AngularFireObject<Post> {\n        return this.db.object(`posts/${id}/`);\n    }\n    getPostList(): AngularFireList<Post> {\n        return this.db.list('posts');\n    }\n    save(post: Post) {\n        if (post.key !== undefined || post.key !== null) {\n            delete post.key;\n        }\n        if (post.id) {\n            const e = this.getObject(post.id);\n            e.update(post).then(console.log, console.error);\n        } else {\n            const l = this.getPostList();\n            l.push(post);\n        }\n        this.ps.refreshData();\n    }\n    delete(post: Post) {\n        if (post.id && confirm('Are you sure you want to delete this post?')) {\n            return this.getObject(post.id).remove();\n        } else {\n            console.error('Couldn\\'t find post to delete');\n        }\n    }\n\n}\n","<style>\n    mat-form-field {\n        display: block;\n    }\n\n    mat-input {\n        display: block;\n        margin: 0 0 32px 0;\n    }\n</style>\n<div *ngIf=\"postData | async as post; else loading\" class=\"padded\" style=\"flex-grow:1;\"\n(keydown)=\"onKey($event, post)\">\n    <div class=\"columns\" style=\"display:flex;\">\n        <form style=\"width:50%;padding:16px;\" ngNoForm>\n            <mat-form-field>\n                <input matInput placeholder=\"title\" [(ngModel)]=\"post.title\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"image url\" [(ngModel)]=\"post.image\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"id\" [(ngModel)]=\"post.id\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"date\" type=\"date\" [(ngModel)]=\"post.date\">\n            </mat-form-field>\n            <textarea placeholder=\"body\" (ngModelChange)=\"contentChange(post)\" [(ngModel)]=\"post.body\" [style.height.px]=\"post && post.body && post.body.length > 200 && post.body.length / 2 || 400\" style=\"width:100%;\"></textarea>\n            <button type=\"button\" (click)=\"save(post)\">Save</button>\n        </form>\n        \n        <div style=\"width:50%;padding:16px;\" class=\"post\">\n            <div class=\"highlight-image\">\n                <img *ngIf=\"!post.image\" src=\"/assets/images/imgpostholder.png\" [alt]=\"post.title\">\n                <img *ngIf=\"post.image\" [src]=\"post.image\" [alt]=\"post.title\">\n            </div>\n\n            <h1>\n                <a [routerLink]=\"['/blog',post.id]\" target=\"preview\">{{post.title}}</a>\n            </h1>\n            <div>\n                <h3>by Stephen Fluin</h3>\n            </div>\n            <div class=\"date\">\n                <h3>{{post.date}}</h3>\n            </div>\n            <div [innerHTML]=\"postPreview | async\">\n            </div>\n        </div>\n    </div>\n    <div>\n        <image-upload *ngIf=\"post.id\" [folder]=\"'posts/'+post.id\"></image-upload>\n    </div>\n    <div>\n        <h2>Delete Post</h2>\n        <button (click)=\"delete(post)\">Delete This Post</button>\n    </div>\n</div>\n<ng-template #loading>Loading posts...</ng-template>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { PostService, Post } from '../shared/post.service';\nimport { EditablePostService } from './shared/editable-post.service';\n\nimport { Observable ,  Subject, of as observableOf } from 'rxjs';\nimport { map, switchMap, debounceTime, tap } from 'rxjs/operators';\n\nimport snarkdown from 'snarkdown';\nimport { SafeHtml } from '@angular/platform-browser';\n\n@Component({\n    templateUrl: './edit-post.component.html',\n})\nexport class EditPostComponent {\n    renderedBody;\n    /**\n     * Data coming from the server\n     */\n    postData: Observable<Post>;\n    /**\n     * Data coming from the user\n     */\n    postChanges = new Subject<Post>();\n    postPreview: Observable<SafeHtml>;\n    converter;\n\n    constructor(\n        activatedRoute: ActivatedRoute,\n        public posts: PostService,\n        public ep: EditablePostService,\n        title: Title,\n        public router: Router,\n        public sanitized: DomSanitizer\n    ) {\n\n\n        this.postPreview = this.postChanges.pipe(\n            debounceTime(300),\n            map(post => {\n                return this.sanitized.bypassSecurityTrustHtml(snarkdown((post && post.body) || ''));\n            })\n        );\n\n        this.postData = activatedRoute.params.pipe(\n            switchMap(params => {\n                if (!params['id']) {\n                    console.error('No post specified');\n                    return;\n                } else if (params['id'] === 'new') {\n                    return observableOf(new Post());\n                }\n\n                return posts.postMap.pipe(\n                    map(postListObject => {\n                        console.log('Looking for post from', params, postListObject);\n                        console.log(postListObject);\n                        const item = postListObject[params['id']];\n                        if (item) {\n                            title.setTitle('Edit ' + item.title + ' | fluin.io blog');\n                            this.contentChange(item);\n                        }\n\n                        return item;\n                    }),\n                    tap(post => this.contentChange(post)),\n                );\n            })\n        );\n\n    }\n    contentChange(post) {\n        this.postChanges.next(post);\n    }\n\n    save(post) {\n        this.ep.save(post);\n        this.router.navigateByUrl('/admin');\n    }\n    onKey(event: KeyboardEvent, post: Post) {\n        if (event.ctrlKey && event.key === 's') {\n            this.ep.save(post);\n            event.preventDefault();\n        }\n    }\n\n    delete(post) {\n        this.ep.delete(post);\n        this.router.navigateByUrl('/admin');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { AdminComponent } from './admin.component';\nimport { UploadComponent } from './upload.component';\nimport { EditPostComponent } from './edit-post.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AuthService } from './shared/auth.service';\nimport 'firebase/database';\nimport { EditablePostService } from './shared/editable-post.service';\nimport { FirebaseToolsModule } from '../firebasetools/firebasetools.module';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild([\n            // path should be '' in Lazy loading, 'admin' in not\n            { path: '', component: AdminComponent, data: { title: 'Admin' } },\n            { path: ':id', component: EditPostComponent, data: { title: false } },\n        ]),\n        AngularFireModule.initializeApp({\n            apiKey: 'AIzaSyAJawulOMYRp0eXjMHLqiffzuS9tToCfAI',\n            authDomain: 'fluindotio-website-93127.firebaseapp.com',\n            databaseURL: 'https://fluindotio-website-93127.firebaseio.com',\n            storageBucket: 'fluindotio-website-93127.appspot.com',\n        }),\n        AngularFireAuthModule,\n        AngularFireDatabaseModule,\n        MatCardModule,\n        MatInputModule,\n        FirebaseToolsModule,\n    ],\n    declarations: [AdminComponent, UploadComponent, EditPostComponent],\n    providers: [AuthService, EditablePostService],\n})\nexport class AdminModule { }\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    var newLevel = typeof level === 'string' ? levelStringToEnum[level] : level;\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = newLevel;\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar component = require('@firebase/component');\nvar logger$1 = require('@firebase/logger');\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"no-app\" /* NO_APP */] = \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    _a[\"bad-app-name\" /* BAD_APP_NAME */] = \"Illegal App name: '{$appName}\",\r\n    _a[\"duplicate-app\" /* DUPLICATE_APP */] = \"Firebase App named '{$appName}' already exists\",\r\n    _a[\"app-deleted\" /* APP_DELETED */] = \"Firebase App named '{$appName}' already deleted\",\r\n    _a[\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    _a[\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);\n\nvar name$1 = \"@firebase/app\";\nvar version = \"0.6.0\";\n\nvar name$2 = \"@firebase/analytics\";\n\nvar name$3 = \"@firebase/auth\";\n\nvar name$4 = \"@firebase/database\";\n\nvar name$5 = \"@firebase/functions\";\n\nvar name$6 = \"@firebase/installations\";\n\nvar name$7 = \"@firebase/messaging\";\n\nvar name$8 = \"@firebase/performance\";\n\nvar name$9 = \"@firebase/remote-config\";\n\nvar name$a = \"@firebase/storage\";\n\nvar name$b = \"@firebase/firestore\";\n\nvar name$c = \"firebase-wrapper\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a$1;\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nvar PLATFORM_LOG_STRING = (_a$1 = {},\r\n    _a$1[name$1] = 'fire-core',\r\n    _a$1[name$2] = 'fire-analytics',\r\n    _a$1[name$3] = 'fire-auth',\r\n    _a$1[name$4] = 'fire-rtdb',\r\n    _a$1[name$5] = 'fire-fn',\r\n    _a$1[name$6] = 'fire-iid',\r\n    _a$1[name$7] = 'fire-fcm',\r\n    _a$1[name$8] = 'fire-perf',\r\n    _a$1[name$9] = 'fire-rc',\r\n    _a$1[name$a] = 'fire-gcs',\r\n    _a$1[name$b] = 'fire-fst',\r\n    _a$1['fire-js'] = 'fire-js',\r\n    _a$1[name$c] = 'fire-js-all',\r\n    _a$1);\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/app');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        var e_1, _a;\r\n        var _this = this;\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.name_ = config.name;\r\n        this.automaticDataCollectionEnabled_ =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.container = new component.ComponentContainer(config.name);\r\n        // add itself to container\r\n        this._addComponent(new component.Component('app', function () { return _this; }, \"PUBLIC\" /* PUBLIC */));\r\n        try {\r\n            // populate ComponentContainer with existing components\r\n            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component$1 = _c.value;\r\n                this._addComponent(component$1);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.automaticDataCollectionEnabled_;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this.automaticDataCollectionEnabled_ = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return this.container.getProvider(name).getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    };\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get this service again.\r\n     *\r\n     * NOTE: currently only firestore is using this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.container.getProvider(name).clearInstance(instanceIdentifier);\r\n    };\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     */\r\n    FirebaseAppImpl.prototype._addComponent = function (component) {\r\n        try {\r\n            this.container.addComponent(component);\r\n        }\r\n        catch (e) {\r\n            logger.debug(\"Component \" + component.name + \" failed to register with FirebaseApp \" + this.name, e);\r\n        }\r\n    };\r\n    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {\r\n        this.container.addOrOverwriteComponent(component);\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\n\nvar version$1 = \"7.12.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    var apps = {};\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var components = new Map();\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        // @ts-ignore\r\n        app: app,\r\n        registerVersion: registerVersion,\r\n        setLogLevel: logger$1.setLogLevel,\r\n        onLog: onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: version$1,\r\n        INTERNAL: {\r\n            registerComponent: registerComponent,\r\n            removeApp: removeApp,\r\n            components: components,\r\n            useAsService: useAsService\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n                appName: String(name)\r\n            });\r\n        }\r\n        if (util.contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n        var app = new firebaseAppImpl(options, config, namespace);\r\n        apps[name] = app;\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(function (name) { return apps[name]; });\r\n    }\r\n    function registerComponent(component) {\r\n        var e_1, _a;\r\n        var componentName = component.name;\r\n        if (components.has(componentName)) {\r\n            logger.debug(\"There were multiple attempts to register component \" + componentName + \".\");\r\n            return component.type === \"PUBLIC\" /* PUBLIC */\r\n                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    namespace[componentName]\r\n                : null;\r\n        }\r\n        components.set(componentName, component);\r\n        // create service namespace for public components\r\n        if (component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // The Service namespace is an accessor function ...\r\n            var serviceNamespace = function (appArg) {\r\n                if (appArg === void 0) { appArg = app(); }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentName] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentName]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                util.deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentName] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentName] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i] = arguments[_i];\r\n                    }\r\n                    var serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        try {\r\n            // add the component to existing app instances\r\n            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var appName = _c.value;\r\n                apps[appName]._addComponent(component);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentName]\r\n            : null;\r\n    }\r\n    function registerVersion(libraryKeyOrName, version, variant) {\r\n        var _a;\r\n        // TODO: We can use this check to whitelist strings when/if we set up\r\n        // a good whitelist system.\r\n        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n        if (variant) {\r\n            library += \"-\" + variant;\r\n        }\r\n        var libraryMismatch = library.match(/\\s|\\//);\r\n        var versionMismatch = version.match(/\\s|\\//);\r\n        if (libraryMismatch || versionMismatch) {\r\n            var warning = [\r\n                \"Unable to register library \\\"\" + library + \"\\\" with version \\\"\" + version + \"\\\":\"\r\n            ];\r\n            if (libraryMismatch) {\r\n                warning.push(\"library name \\\"\" + library + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            if (libraryMismatch && versionMismatch) {\r\n                warning.push('and');\r\n            }\r\n            if (versionMismatch) {\r\n                warning.push(\"version name \\\"\" + version + \"\\\" contains illegal characters (whitespace or \\\"/\\\")\");\r\n            }\r\n            logger.warn(warning.join(' '));\r\n            return;\r\n        }\r\n        registerComponent(new component.Component(library + \"-version\", function () { return ({ library: library, version: version }); }, \"VERSION\" /* VERSION */));\r\n    }\r\n    function onLog(logCallback, options) {\r\n        if (logCallback !== null && typeof logCallback !== 'function') {\r\n            throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */, {\r\n                appName: name\r\n            });\r\n        }\r\n        logger$1.setUserLogHandler(logCallback, options);\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,\r\n        extendNamespace: extendNamespace,\r\n        createSubscribe: util.createSubscribe,\r\n        ErrorFactory: util.ErrorFactory,\r\n        deepExtend: util.deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nvar firebase = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PlatformLoggerService = /** @class */ (function () {\r\n    function PlatformLoggerService(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    PlatformLoggerService.prototype.getPlatformInfoString = function () {\r\n        var providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(function (provider) {\r\n            if (isVersionServiceProvider(provider)) {\r\n                var service = provider.getImmediate();\r\n                return service.library + \"/\" + service.version;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(function (logString) { return logString; })\r\n            .join(' ');\r\n    };\r\n    return PlatformLoggerService;\r\n}());\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    var component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(firebase, variant) {\r\n    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    firebase.registerVersion(name$1, version, variant);\r\n    // Register platform SDK identifier (no version).\r\n    firebase.registerVersion('fire-js', '');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (util.isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(\"\\n    Warning: Firebase is already defined in the global scope. Please make sure\\n    Firebase library is only loaded once.\\n  \");\r\n    // eslint-disable-next-line\r\n    var sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(\"\\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\\n    \");\r\n    }\r\n}\r\nvar initializeApp = firebase.initializeApp;\r\n// TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n// the no-explicit-any rule when ESlint releases it.\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfirebase.initializeApp = function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    // Environment check before initializing app\r\n    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel\r\n    // in @firebase/logger\r\n    if (util.isNode()) {\r\n        logger.warn(\"\\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\\n      run in a Node environment.  If running in a Node environment, make sure you\\n      are using the bundle specified by the \\\"main\\\" field in package.json.\\n      \\n      If you are using Webpack, you can specify \\\"main\\\" as the first item in\\n      \\\"resolve.mainFields\\\":\\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\\n      \\n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \\\"main\\\"\\n      as the first item in \\\"mainFields\\\", e.g. ['main', 'module'].\\n      https://github.com/rollup/rollup-plugin-node-resolve\\n      \");\r\n    }\r\n    return initializeApp.apply(undefined, args);\r\n};\r\nvar firebase$1 = firebase;\r\nregisterCoreComponents(firebase$1);\n\nexports.default = firebase$1;\nexports.firebase = firebase$1;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [];\r\n    var pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString: function (input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, webSafe) {\r\n        this.init_();\r\n        var charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.reject = function () { };\r\n        this.resolve = function () { };\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    var runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    var ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nvar FirebaseError = /** @class */ (function (_super) {\r\n    tslib.__extends(FirebaseError, _super);\r\n    function FirebaseError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(_this, ErrorFactory.prototype.create);\r\n        }\r\n        return _this;\r\n    }\r\n    return FirebaseError;\r\n}(Error));\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    ErrorFactory.prototype.create = function (code) {\r\n        var data = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            data[_i - 1] = arguments[_i];\r\n        }\r\n        var customData = data[0] || {};\r\n        var fullCode = this.service + \"/\" + code;\r\n        var template = this.errors[code];\r\n        var message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\r\n        var error = new FirebaseError(fullCode, fullMessage);\r\n        // Keys with an underscore at the end of their name are not included in\r\n        // error.data for some reason.\r\n        // TODO: Replace with Object.entries when lib is updated to es2017.\r\n        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {\r\n            var key = _b[_a];\r\n            if (key.slice(-1) !== '_') {\r\n                if (key in error) {\r\n                    console.warn(\"Overwriting FirebaseError base field \\\"\" + key + \"\\\" can cause unexpected behavior.\");\r\n                }\r\n                error[key] = customData[key];\r\n            }\r\n        }\r\n        return error;\r\n    };\r\n    return ErrorFactory;\r\n}());\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, function (_, key) {\r\n        var value = data[key];\r\n        return value != null ? value.toString() : \"<\" + key + \"?>\";\r\n    });\r\n}\r\nvar PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims;\r\n    var now = Math.floor(new Date().getTime() / 1000);\r\n    var validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    var params = [];\r\n    var _loop_1 = function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    };\r\n    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        _loop_1(key, value);\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function () {\r\n    function Sha1() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (var i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}());\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argumentNumber The index of the argument\r\n * @param optional Whether or not the argument is optional\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [];\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\nexports.CONSTANTS = CONSTANTS;\nexports.Deferred = Deferred;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.Sha1 = Sha1;\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.async = async;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.contains = contains;\nexports.createSubscribe = createSubscribe;\nexports.decode = decode;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.errorPrefix = errorPrefix;\nexports.getUA = getUA;\nexports.isAdmin = isAdmin;\nexports.isBrowser = isBrowser;\nexports.isBrowserExtension = isBrowserExtension;\nexports.isElectron = isElectron;\nexports.isEmpty = isEmpty;\nexports.isIE = isIE;\nexports.isMobileCordova = isMobileCordova;\nexports.isNode = isNode;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.isUWP = isUWP;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.issuedAtTime = issuedAtTime;\nexports.jsonEval = jsonEval;\nexports.map = map;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.safeGet = safeGet;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\nexports.stringify = stringify;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\n//# sourceMappingURL=index.cjs.js.map\n"]}