/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
export var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {
    function ngDevModeResetPerfCounters() {
        global['ngDevMode'] = {
            firstTemplatePass: 0,
            tNode: 0,
            tView: 0,
            rendererCreateTextNode: 0,
            rendererSetText: 0,
            rendererCreateElement: 0,
            rendererAddEventListener: 0,
            rendererSetAttribute: 0,
            rendererRemoveAttribute: 0,
            rendererSetProperty: 0,
            rendererSetClassName: 0,
            rendererAddClass: 0,
            rendererRemoveClass: 0,
            rendererSetStyle: 0,
            rendererRemoveStyle: 0,
            rendererDestroy: 0,
            rendererDestroyNode: 0,
            rendererMoveNode: 0,
            rendererRemoveNode: 0,
        };
    }
    ngDevModeResetPerfCounters();
    return ngDevModeResetPerfCounters;
})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||
    typeof global != 'undefined' && global));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdfZGV2X21vZGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9yZW5kZXIzL25nX2Rldl9tb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQStCSCxNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FDbkMsQ0FBQyxPQUFPLFNBQVMsSUFBSSxXQUFXLElBQUksQ0FBQyxVQUFTLE1BQTBDO0lBQ3JGO1FBQ0UsTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHO1lBQ3BCLGlCQUFpQixFQUFFLENBQUM7WUFDcEIsS0FBSyxFQUFFLENBQUM7WUFDUixLQUFLLEVBQUUsQ0FBQztZQUNSLHNCQUFzQixFQUFFLENBQUM7WUFDekIsZUFBZSxFQUFFLENBQUM7WUFDbEIscUJBQXFCLEVBQUUsQ0FBQztZQUN4Qix3QkFBd0IsRUFBRSxDQUFDO1lBQzNCLG9CQUFvQixFQUFFLENBQUM7WUFDdkIsdUJBQXVCLEVBQUUsQ0FBQztZQUMxQixtQkFBbUIsRUFBRSxDQUFDO1lBQ3RCLG9CQUFvQixFQUFFLENBQUM7WUFDdkIsZ0JBQWdCLEVBQUUsQ0FBQztZQUNuQixtQkFBbUIsRUFBRSxDQUFDO1lBQ3RCLGdCQUFnQixFQUFFLENBQUM7WUFDbkIsbUJBQW1CLEVBQUUsQ0FBQztZQUN0QixlQUFlLEVBQUUsQ0FBQztZQUNsQixtQkFBbUIsRUFBRSxDQUFDO1lBQ3RCLGdCQUFnQixFQUFFLENBQUM7WUFDbkIsa0JBQWtCLEVBQUUsQ0FBQztTQUN0QixDQUFDO0lBQ0osQ0FBQztJQUNELDBCQUEwQixFQUFFLENBQUM7SUFDN0IsT0FBTywwQkFBMEIsQ0FBQztBQUNwQyxDQUFDLENBQUMsQ0FBQyxPQUFPLE1BQU0sSUFBSSxXQUFXLElBQUksTUFBTSxJQUFJLE9BQU8sSUFBSSxJQUFJLFdBQVcsSUFBSSxJQUFJO0lBQzVFLE9BQU8sTUFBTSxJQUFJLFdBQVcsSUFBSSxNQUFNLENBQUMsQ0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgY29uc3QgbmdEZXZNb2RlOiBudWxsfE5nRGV2TW9kZVBlcmZDb3VudGVycztcbiAgaW50ZXJmYWNlIE5nRGV2TW9kZVBlcmZDb3VudGVycyB7XG4gICAgZmlyc3RUZW1wbGF0ZVBhc3M6IG51bWJlcjtcbiAgICB0Tm9kZTogbnVtYmVyO1xuICAgIHRWaWV3OiBudW1iZXI7XG4gICAgcmVuZGVyZXJDcmVhdGVUZXh0Tm9kZTogbnVtYmVyO1xuICAgIHJlbmRlcmVyU2V0VGV4dDogbnVtYmVyO1xuICAgIHJlbmRlcmVyQ3JlYXRlRWxlbWVudDogbnVtYmVyO1xuICAgIHJlbmRlcmVyQWRkRXZlbnRMaXN0ZW5lcjogbnVtYmVyO1xuICAgIHJlbmRlcmVyU2V0QXR0cmlidXRlOiBudW1iZXI7XG4gICAgcmVuZGVyZXJSZW1vdmVBdHRyaWJ1dGU6IG51bWJlcjtcbiAgICByZW5kZXJlclNldFByb3BlcnR5OiBudW1iZXI7XG4gICAgcmVuZGVyZXJTZXRDbGFzc05hbWU6IG51bWJlcjtcbiAgICByZW5kZXJlckFkZENsYXNzOiBudW1iZXI7XG4gICAgcmVuZGVyZXJSZW1vdmVDbGFzczogbnVtYmVyO1xuICAgIHJlbmRlcmVyU2V0U3R5bGU6IG51bWJlcjtcbiAgICByZW5kZXJlclJlbW92ZVN0eWxlOiBudW1iZXI7XG4gICAgcmVuZGVyZXJEZXN0cm95OiBudW1iZXI7XG4gICAgcmVuZGVyZXJEZXN0cm95Tm9kZTogbnVtYmVyO1xuICAgIHJlbmRlcmVyTW92ZU5vZGU6IG51bWJlcjtcbiAgICByZW5kZXJlclJlbW92ZU5vZGU6IG51bWJlcjtcbiAgfVxufVxuXG5cblxuZGVjbGFyZSBsZXQgZ2xvYmFsOiBhbnk7XG5leHBvcnQgY29uc3QgbmdEZXZNb2RlUmVzZXRQZXJmQ291bnRlcnM6ICgpID0+IHZvaWQgPVxuICAgICh0eXBlb2YgbmdEZXZNb2RlID09ICd1bmRlZmluZWQnICYmIChmdW5jdGlvbihnbG9iYWw6IHtuZ0Rldk1vZGU6IE5nRGV2TW9kZVBlcmZDb3VudGVyc30pIHtcbiAgICAgICBmdW5jdGlvbiBuZ0Rldk1vZGVSZXNldFBlcmZDb3VudGVycygpIHtcbiAgICAgICAgIGdsb2JhbFsnbmdEZXZNb2RlJ10gPSB7XG4gICAgICAgICAgIGZpcnN0VGVtcGxhdGVQYXNzOiAwLFxuICAgICAgICAgICB0Tm9kZTogMCxcbiAgICAgICAgICAgdFZpZXc6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyQ3JlYXRlVGV4dE5vZGU6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyU2V0VGV4dDogMCxcbiAgICAgICAgICAgcmVuZGVyZXJDcmVhdGVFbGVtZW50OiAwLFxuICAgICAgICAgICByZW5kZXJlckFkZEV2ZW50TGlzdGVuZXI6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyU2V0QXR0cmlidXRlOiAwLFxuICAgICAgICAgICByZW5kZXJlclJlbW92ZUF0dHJpYnV0ZTogMCxcbiAgICAgICAgICAgcmVuZGVyZXJTZXRQcm9wZXJ0eTogMCxcbiAgICAgICAgICAgcmVuZGVyZXJTZXRDbGFzc05hbWU6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyQWRkQ2xhc3M6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyUmVtb3ZlQ2xhc3M6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyU2V0U3R5bGU6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyUmVtb3ZlU3R5bGU6IDAsXG4gICAgICAgICAgIHJlbmRlcmVyRGVzdHJveTogMCxcbiAgICAgICAgICAgcmVuZGVyZXJEZXN0cm95Tm9kZTogMCxcbiAgICAgICAgICAgcmVuZGVyZXJNb3ZlTm9kZTogMCxcbiAgICAgICAgICAgcmVuZGVyZXJSZW1vdmVOb2RlOiAwLFxuICAgICAgICAgfTtcbiAgICAgICB9XG4gICAgICAgbmdEZXZNb2RlUmVzZXRQZXJmQ291bnRlcnMoKTtcbiAgICAgICByZXR1cm4gbmdEZXZNb2RlUmVzZXRQZXJmQ291bnRlcnM7XG4gICAgIH0pKHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93IHx8IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYgfHxcbiAgICAgICAgdHlwZW9mIGdsb2JhbCAhPSAndW5kZWZpbmVkJyAmJiBnbG9iYWwpKSBhcygpID0+IHZvaWQ7XG4iXX0=